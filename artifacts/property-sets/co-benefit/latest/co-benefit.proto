syntax = "proto3";

package cobenefit;

import "tokens.proto";
import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "verified-link.proto";

option csharp_namespace = "IWA.TTF.PropertySets.CO";
option java_package = "org.iwa.ttf.propertySets.co";
option java_multiple_files = true;

//Not complete
enum BenefitCategory {
    NO_CATEGORY = 0;
    NO_POVERTY = 1;
    ZERO_HUNGER = 2;
    GOOD_HEALTH_AND_WELL_BEING = 3;
    QUALITY_EDUCATION = 4;
    GENDER_EQUALITY = 5;
    CLEAN_WATER_AND_SANITATION = 6;
    AFFORDABLE_AND_CLEAN_ENERGY = 7;
    DECENT_WORK_AND_ECONOMIC_GROWTH = 8;
    INDUSTRY_INNOVATION_AND_INFRASTRUCTURE = 9;
    REDUCED_INEQUALITIES = 10;
    SUSTAINABLE_CITIES_AND_COMMUNITIES = 11;
    RESPONSIBLE_CONSUMPTION_AND_PRODUCTION = 12;
    CLIMATE_ACTION = 13;
    LIFE_BELOW_WATER = 14;
    LIFE_ON_LAND = 15;
    PEACE_JUSTICE_AND_STRONG_INSTITUTIONS = 16;
    PARTNERSHIPS_FOR_THE_GOALS = 17;
}

message CoBenefit {
    BenefitCategory co_benefit = 1; //high-level categories
    string description = 2; //description of the co-benefit that is not captured via the category
    int32 rating_score = 3;  //placeholder for some kind of rating or scoring of the relative co-benefit
}

//if used as a repeated property set
message CoBenefits {
    repeated CoBenefit co_benefit = 1;
}

message GetCoBenefitRequest {
    tokens.MessageHeader header = 1;
}

message GetCoBenefitResponse {
    tokens.MessageHeader header = 1;
    CoBenefit co_benefit = 2;
}

message SetCoBenefitRequest {
    tokens.MessageHeader header = 1;
    CoBenefit co_benefit = 2;
}

message SetCoBenefitResponse {
    tokens.MessageHeader header = 1;
    tokens.TransactionConfirmation transaction_confirmation = 2;
}

//if used as a repeated property set
message GetCoBenefitsRequest {
    tokens.MessageHeader header = 1;
}

//if used as a repeated property set
message GetCoBenefitsResponse {
    tokens.MessageHeader header = 1;
    CoBenefits co_benefits = 2;
}

//if used as a repeated property set
message AddCoBenefitRequest {
    tokens.MessageHeader header = 1;
    CoBenefit co_benefit = 2;
}

//if used as a repeated property set
message AddCoBenefitResponse {
    tokens.MessageHeader header = 1;
    tokens.TransactionConfirmation transaction_confirmation = 2;
}

//if used as a repeated property set
message RemoveCoBenefitRequest {
    tokens.MessageHeader header = 1;
    CoBenefit co_benefit = 2;
}

//if used as a repeated property set
message RemoveCoBenefitResponse {
    tokens.MessageHeader header = 1;
    tokens.TransactionConfirmation transaction_confirmation = 2;
}