syntax = "proto3";

package corecarbonprinciples;

import "tokens.proto";
import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "co-benefit.proto";
import "mitigation-activity.proto";
import "pariscompliance.proto";
import "durability.proto";

option csharp_namespace = "IWA.TTF.PropertySets.CCP";
option java_package = "org.iwa.ttf.propertySets.ccp";
option java_multiple_files = true;

//a ecological product can be a generated value based on current results or ex-ante, meaning a predicted result, or ex-post which is based on historical results.
enum GenerationType {
    GENERATED = 0;
    EX_ANTE = 1;
    EX_POST = 2;
}

//the verification standard used to determine and issue a ecological benefit token. These can be a voluntary or compliance/regulatory standard.
enum QualityStandard {
    GS_VER = 0; //Voluntary: Gold Standard Verified Emissions Reduction
    VCS = 1; //Voluntary: Cerified Carbon Standard generates VCUs
    VOS = 2; //Voluntary: Voluntary Offset Standard
    CCB = 3; //Voluntary: Climate, Community and Biodiversity Standard
    GREEN_E = 4; //Voluntary: US renewable energy
    CDM = 5; //Compliance: Clean Development Mechanism generates CERs
    JI = 6; //Compliance: Joint Implementation - Kyoto binding targets generation of ERUs
    EUA = 7; //Compliance: European Union Allowances
    OTHER = 25;
}

message CoreCarbonPrinciples{
    string asset_id = 1; //typically the issuing registry's master id or serial number that resides on their registry system. Could be empty or the same as the token's id if not needed.
    google.protobuf.TimeStamp issuance_date = 2; //the date the token was issued.
    string vintage = 3;  //refers to the year that the emissions reduction or removal took place or will take place.
    GenerationType generation_type = 4; //typically generated or ex-ante
    QualityStandard verification_standard = 5; //the verification standard used to determine and issue a ecological benefit token. These can be a voluntary or compliance/regulatory standard.
    mitigationactivity.MitigationActivity mitigation_activity = 6; //the mitigation activity that is used to generate the ecological benefit token.
    durability.Durability durability = 7; //this is the recommendation that replaces permanence for CCPs as it includes the risk profile and not simply a boolean.
    replacement.Replacement replacement = 8; //set if this Core Carbon Principles replaces a revoked or adjusted CCP.
    pariscompliance.PACompliance paris_agreement_compliance = 9; //set if using PA specific attributes like corresponding adjustment
    cobenefit.Cobenefits quantified_sdg_impacts = 10; //the quantified impacts of the token.
    cobenefit.Cobenefits adaptation_co_benefits = 11; //the adaptation co-benefits of the token consistent with the host countryâ€™s priorities, consistent with the provisions under Article 7.1 of the Paris Agreement.
}

message GetCoreCarbonPrinciplesRequest {
    tokens.MessageHeader header = 1;
}

message GetCoreCarbonPrinciplesResponse {
    tokens.MessageHeader header = 1;
    CoreCarbonPrinciples ecological_claim = 2;
}

message SetCoreCarbonPrinciplesRequest {
    tokens.MessageHeader header = 1;
    CoreCarbonPrinciples ecological_claim = 2;
}

message SetCoreCarbonPrinciplesResponse {
    tokens.MessageHeader header = 1;
    tokens.TransactionConfirmation transaction_confirmation = 2;
}
