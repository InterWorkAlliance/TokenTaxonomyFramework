{
  "artifact": {
    "artifactSymbol": {
      "id": "2d7130d9-34cb-49a4-85f4-a780fb066921",
      "type": "TEMPLATE_DEFINITION",
      "visual": "[&tau;<sub>F'</sub>{<i>d,t,e,v,g,</i>OSC}+&ph;CCP+&ph;CCA]",
      "tooling": "[tFâ€™{d,t,e,v,g,OSC}+phCCP+phCCA]",
      "version": "1.0",
      "templateValidated": false
    },
    "name": "Core-Carbon-Principles",
    "aliases": [
      "Carbon Credit"
    ],
    "artifactDefinition": {
      "businessDescription": "DRAFT - This is a token based on the recommendations from the Taskforce for Scaling Voluntary Carbon Markets (TSVCM) for creating the Core Carbon Principles and extended attributes.  It is a Unique Fractional Fungible, to 2 decimal places with Offsetable Supply Control with Revoke and Replacement, Core Carbon Principles and Core Carbon Attributes.  It is a token where 1 token equals 1 mtCO2e and can be issued in any amount. A token instance can be minted if the requesting party is in the minters role. This template contains the Replacement, Core Carbon Principles and Core Carbon Attributes property sets as well.",
      "businessExample": "Typically used to represent a token based on the TSVCM Core Carbon Principles or CCP to be a common representation of a carbon credit designated for use in voluntary markets. When accompanied with additional attributes, credits can be differentiated from their CO2e face value to include details as to reduction vs. removal, project location, durability, etc. These CCP tokens can then be bundled together based on their similar attribute values into 'reference contracts' to be traded in larger lots.",
      "analogies": [
        {
          "name": "Carbon Removal Token",
          "description": "A token created by a verifier that has verified a carbon removal claim."
        }
      ],
      "comments": ""
    },
    "dependencies": [],
    "incompatibleWithSymbols": [],
    "influencedBySymbols": [],
    "controlUri": "",
    "artifactFiles": [
      {
        "content": "CONTROL",
        "fileName": "Core-Carbon-Principles.proto",
        "fileData": ""
      },
      {
        "content": "UML",
        "fileName": "Core-Carbon-Principles.md",
        "fileData": ""
      }
    ],
    "maps": {
      "codeReferences": [],
      "implementationReferences": [],
      "resources": []
    },
    "contributors": [
      {
        "name": "Debbie Reed",
        "organization": "ESMC"
      },
      {
        "name": "Cameron Prell",
        "organization": "XPansiv"
      },
      {
        "name": "Marley Gray",
        "organization": "Microsoft"
      },
      {
        "name": "Doug Miller",
        "organization": "Energy Web Foundation"
      },
      {
        "name": "John Lee",
        "organization": "Accenture"
      },
      {
        "name": "Robert Greenfield",
        "organization": "Emerging Impact Group"
      },
      {
        "name": "Conor Svensson",
        "organization": "Web3 Labs"
      },
      {
        "name": "Martin Wainstein",
        "organization": "Open Earth Foundation"
      },
      {
        "name": "Meerim Ruslanova",
        "organization": "Energy Web Foundation"
      },
      {
        "name": "Ken Anderson",
        "organization": "Hedera Hashgraph"
      },
      {
        "name": "Wes Geisenberger",
        "organization": "Hedera Hashgraph"
      },
      {
        "name": "Tom Herman",
        "organization": "AirCarbon Pte Ltd"
      },
      {
        "name": "Tom Baumann",
        "organization": "Climate Check"
      }
    ]
  },
  "formulaReference": {
    "id": "c35cb15c-ac88-428e-9136-b6f9ceed3891",
    "type": "TEMPLATE_FORMULA",
    "referenceNotes": "Core-Carbon-Principles"
  },
  "tokenBase": {
    "reference": {
      "id": "3e05130c-969a-4dfc-abe6-c83fad98a4ec",
      "type": "BASE",
      "referenceNotes": "",
      "values": {
        "controlUri": "",
        "artifactFiles": [],
        "maps": {
          "codeReferences": [],
          "implementationReferences": [],
          "resources": []
        }
      }
    },
    "valueType": "REFERENCE",
    "supply": "INFINITE",
    "name": "",
    "symbol": "",
    "owner": "",
    "quantity": "0",
    "decimals": 2,
    "tokenProperties": {
      "issuer": "Should be the Verifier",
      "minters": "All verifiers that are able to mint and become the issuer of an instance."
    },
    "constructorName": "Constructor"
  },
  "behaviors": [
    {
      "reference": {
        "id": "6e3501dc-5800-4c71-b59e-ad11418a998c",
        "type": "BEHAVIOR",
        "referenceNotes": "Divisible",
        "values": {
          "controlUri": "",
          "artifactFiles": [],
          "maps": {
            "codeReferences": [],
            "implementationReferences": [],
            "resources": []
          }
        }
      },
      "isExternal": true,
      "constructorType": "",
      "appliesTo": [],
      "invocations": [],
      "influenceBindings": [],
      "properties": [
        {
          "name": "Decimals",
          "valueDescription": "Set to a number greater than Zero, allowing subdivision",
          "templateValue": "2",
          "propertyInvocations": [
            {
              "id": "01f7ef04-1215-45f1-b118-12b4a76db9ad",
              "name": "GetDecimalsRequest",
              "description": "Return the value",
              "request": {
                "controlMessageName": "GetDecimalsRequest",
                "description": "",
                "inputParameters": []
              },
              "response": {
                "controlMessageName": "GetDecimalsResponse",
                "description": "Return number of decimal places",
                "outputParameters": [
                  {
                    "name": "Decimals",
                    "valueDescription": "integer"
                  }
                ]
              },
              "notForRepetition": false,
              "forRepetitionOnly": false
            }
          ],
          "influenceBindings": [],
          "properties": [],
          "repeated": false
        }
      ]
    },
    {
      "reference": {
        "id": "af119e58-6d84-4ca6-9656-75e8d312f038",
        "type": "BEHAVIOR",
        "referenceNotes": "Transferable",
        "values": {
          "controlUri": "",
          "artifactFiles": [],
          "maps": {
            "codeReferences": [],
            "implementationReferences": [],
            "resources": []
          }
        }
      },
      "isExternal": true,
      "constructorType": "",
      "appliesTo": [],
      "invocations": [
        {
          "id": "5d4b8f10-7857-4a2f-9b8c-d61e367a6bcc",
          "name": "Transfer",
          "description": ">A transfer request will invoke a transfer from the owner of the token to the party or account provided in the To field of the request. For fungible or dividable non-fungible tokens, this request may also include value in the Amount field of the request to transfer more than one token of the class in a single request.",
          "request": {
            "controlMessageName": "TransferRequest",
            "description": "The request",
            "inputParameters": [
              {
                "name": "To",
                "valueDescription": "AccountId to transfer ownership to."
              },
              {
                "name": "Quantity",
                "valueDescription": "Number of tokens to transfer."
              }
            ]
          },
          "response": {
            "controlMessageName": "TransferResponse",
            "description": "The response",
            "outputParameters": [
              {
                "name": "Confirmation",
                "valueDescription": "A confirmation receipt or error may be returned to the owner based on the outcome of the transfer request."
              }
            ]
          },
          "notForRepetition": false,
          "forRepetitionOnly": false
        },
        {
          "id": "516b4e2f-4a14-4c4f-a6f2-1419d4af35c6",
          "name": "TransferFrom",
          "description": ">A transfer request is issued by the encumbering entity that can issue settlement instructions to invoke a transfer from the owner of the token to the party or account provided in the To field of the request. This invocation is influences a call to Remove the Encumberance and requires a check on the Role of the caller as the sole encumber.",
          "request": {
            "controlMessageName": "TransferFromRequest",
            "description": "The request",
            "inputParameters": [
              {
                "name": "From",
                "valueDescription": "AccountId to transfer ownership from."
              },
              {
                "name": "To",
                "valueDescription": "AccountId to transfer ownership to."
              },
              {
                "name": "Quantity",
                "valueDescription": "Number of tokens to transfer."
              }
            ]
          },
          "response": {
            "controlMessageName": "TransferFromResponse",
            "description": "The response",
            "outputParameters": [
              {
                "name": "Confirmation",
                "valueDescription": "A confirmation receipt or error may be returned to the owner based on the outcome of the transfer from request."
              }
            ]
          },
          "notForRepetition": false,
          "forRepetitionOnly": false
        }
      ],
      "influenceBindings": [
        {
          "influencedId": "dc8d5961-59e8-4a10-8b38-d9e99394d251",
          "influencedInvocationId": "4532c466-bb6d-482a-b2cc-5285ba1f8259",
          "influenceType": "INTERCEPT",
          "influencingInvocation": {
            "id": "516b4e2f-4a14-4c4f-a6f2-1419d4af35c6",
            "name": "TransferFrom",
            "description": ">A transfer request is issued by the encumbering entity that can issue settlement instructions to invoke a transfer from the owner of the token to the party or account provided in the To field of the request. This invocation is influences a call to Remove the Encumberance and requires a check on the Role of the caller as the sole encumber.",
            "request": {
              "controlMessageName": "TransferFromRequest",
              "description": "Settlement details from the encumbrancer",
              "inputParameters": [
                {
                  "name": "From",
                  "valueDescription": "AccountId to transfer ownership from."
                },
                {
                  "name": "To",
                  "valueDescription": "AccountId to transfer ownership to."
                },
                {
                  "name": "Quantity",
                  "valueDescription": "Number of tokens to transfer."
                }
              ]
            },
            "response": {
              "controlMessageName": "TransferFromResponse",
              "description": "The response",
              "outputParameters": [
                {
                  "name": "Confirmation",
                  "valueDescription": "A confirmation receipt or error may be returned to the owner based on the outcome of the transfer from request."
                }
              ]
            },
            "notForRepetition": false,
            "forRepetitionOnly": false
          },
          "influencedInvocation": {
            "id":"4532c466-bb6d-482a-b2cc-5285ba1f8259",
            "name": "RemoveEncumberRequest",
            "description": "A Request by encumbrancer, to remove their encumber or lien from the token which should remove any restrictions and allow settlement instructions to transfer ownership to occur.  Only the owner of the encumber can remove their encumber.",
            "request": {
              "controlMessageName": "RemoveEncumberRequest",
              "inputParameters": [],
              "description": "The request"
            },
            "response": {
              "controlMessageName": "RemoveEncumberResponse",
              "description": "The response",
              "outputParameters": [
                {
                  "name": "Confirmation",
                  "valueDescription": "A confirmation receipt or denial be returned to the RemoveEncumber requestor."
                }
              ]
            },
            "notForRepetition": false,
            "forRepetitionOnly": false
          }
        }
      ],
      "properties": []
    },
    {
      "reference": {
        "id": "dc8d5961-59e8-4a10-8b38-d9e99394d251",
        "type": "BEHAVIOR",
        "referenceNotes": "Encumberable",
        "values": {
          "controlUri": "",
          "artifactFiles": [],
          "maps": {
            "codeReferences": [],
            "implementationReferences": [],
            "resources": []
          }
        }
      },
      "isExternal": true,
      "constructorType": "",
      "appliesTo": [
        {
          "id":"af119e58-6d84-4ca6-9656-75e8d312f038",
          "type": "BEHAVIOR",
          "visual": "<i>t</i>",
          "tooling": "t",
          "version": "1.0",
          "templateValidated": false
        }
      ],
      "invocations": [
        {
          "id": "bdc69e47-8320-4f54-8a03-0f54c376e113",
          "name": "EncumberRequest",
          "description": "A Request by a party or account, perhaps a contract or another token, to encumber the token.",
          "request": {
            "controlMessageName": "EncumberRequest",
            "description": "The request",
            "inputParameters": [
              {
                "name": "Name of Encumber",
                "valueDescription": "Name of the institution requesting the encumber."
              },
              {
                "name": "Identifier",
                "valueDescription": "A public key or address for the requestor."
              },
              {
                "name": "Signature",
                "valueDescription": "A digital signature or attestation, optional."
              }
            ]
          },
          "response": {
            "controlMessageName": "EncumberResponse",
            "description": "The response",
            "outputParameters": [
              {
                "name": "Confirmation",
                "valueDescription": "A confirmation response from the token for the encumber request."
              }
            ]
          },
          "notForRepetition": false,
          "forRepetitionOnly": false
        },
        {
          "id": "efd8bb57-4904-481e-976d-8a20a33df602",
          "name": "AcceptEncumberRequest",
          "description": "A Request by a party or account, perhaps a contract or another token, to encumber the token.  Once accepted, the token should add a new entry into the Encumbrances property.",
          "request": {
            "controlMessageName": "AcceptEncumberRequest",
            "description": "The request",
            "inputParameters": []
          },
          "response": {
            "controlMessageName": "AcceptEncumberResponse",
            "description": "The response",
            "outputParameters": [
              {
                "name": "Confirmation",
                "valueDescription": "A confirmation response returned to the owner of their acceptance."
              }
            ]
          },
          "notForRepetition": false,
          "forRepetitionOnly": false
        },
        {
          "id": "4532c466-bb6d-482a-b2cc-5285ba1f8259",
          "name": "RemoveEncumberRequest",
          "description": "A Request by encumbrancer, perhaps a contract or another token, to remove their encumber or lien from the token.  Which should remove any restrictions from behaviors if there are no more encumbers.  Only the owner of the encumber can remove their encumber.",
          "request": {
            "controlMessageName": "RemoveEncumberRequest",
            "description": "The request",
            "inputParameters": []
          },
          "response": {
            "controlMessageName": "RemoveEncumberResponse",
            "description": "The response",
            "outputParameters": [
              {
                "name": "Confirmation",
                "valueDescription": "A confirmation receipt or denial be returned to the RemoveEncumber requestor."
              }
            ]
          },
          "notForRepetition": false,
          "forRepetitionOnly": false
        }
      ],
      "influenceBindings": [
        {
          "influencedId": "af119e58-6d84-4ca6-9656-75e8d312f038",
          "influencedInvocationId": "5d4b8f10-7857-4a2f-9b8c-d61e367a6bcc",
          "influenceType": "INTERCEPT",
          "influencingInvocation": {
            "id": "f35cdfee-d2f4-4a01-bf9b-33774b5df241",
            "name": "Encumbered",
            "description": "Check to see if the token has any encumbrances and if so, prevent transfer.",
            "request": {
              "controlMessageName": "GetEncumberedRequest",
              "description": "Checking the Encumbered value - true or false.",
              "inputParameters": [
                {}
              ]
            },
            "response": {
              "controlMessageName": "True/False",
              "description": "Respond true if the token is encumbered, false if not.",
              "outputParameters": [
                {
                  "name": "Encumbered",
                  "valueDescription": "True/False"
                }
              ]
            },
            "notForRepetition": false,
            "forRepetitionOnly": false
          },
          "influencedInvocation": {
            "id": "5d4b8f10-7857-4a2f-9b8c-d61e367a6bcc",
            "name": "Transfer",
            "description": ">A transfer request will invoke a transfer from the owner of the token to the party or account provided in the To field of the request. For fungible or dividable non-fungible tokens, this request may also include value in the Amount field of the request to transfer more than one token of the class in a single request.",
            "request": {
              "controlMessageName": "TransferRequest",
              "description": "The request",
              "inputParameters": [
                {
                  "name": "To",
                  "valueDescription": "AccountId to transfer ownership to."
                },
                {
                  "name": "Quantity",
                  "valueDescription": "Number of tokens to transfer."
                }
              ]
            },
            "response": {
              "controlMessageName": "TransferResponse",
              "description": "The response",
              "outputParameters": [
                {
                  "name": "Confirmation",
                  "valueDescription": "A confirmation receipt or error may be returned to the owner based on the outcome of the transfer request."
                }
              ]
            },
            "notForRepetition": false,
            "forRepetitionOnly": false
          }
        }
      ],
      "properties": [
        {
          "name": "Encumbrances",
          "valueDescription": "List of Encumbered",
          "templateValue": "",
          "propertyInvocations": [
            {
              "id": "9e39bf6a-74dc-4ca1-a709-5db247aaa31b",
              "name": "GetEncumbrancesRequest",
              "description": "The property value.",
              "request": {
                "controlMessageName": "GetEncumbrancesRequest",
                "description": "",
                "inputParameters": []
              },
              "response": {
                "controlMessageName": "GetEncumbrancesResponse",
                "description": "Return value",
                "outputParameters": [
                  {
                    "name": "Encumbrances",
                    "valueDescription": "List of Encumbered"
                  }
                ]
              },
              "notForRepetition": false,
              "forRepetitionOnly": false
            }
          ],
          "influenceBindings": [],
          "properties": [],
          "repeated": false
        },
        {
          "name": "Encumbered",
          "valueDescription": "True or False",
          "templateValue": "",
          "propertyInvocations": [
            {
              "id": "f35cdfee-d2f4-4a01-bf9b-33774b5df241",
              "name": "GetEncumberedRequest",
              "description": "The property value.",
              "request": {
                "controlMessageName": "GetEncumberedRequest",
                "description": "",
                "inputParameters": []
              },
              "response": {
                "controlMessageName": "GetEncumberedResponse",
                "description": "Return value",
                "outputParameters": [
                  {
                    "name": "Encumbered",
                    "valueDescription": "True or False"
                  }
                ]
              },
              "notForRepetition": false,
              "forRepetitionOnly": false
            }
          ],
          "influenceBindings": [],
          "properties": [],
          "repeated": false
        }
      ]
    },
    {
      "reference": {
        "id": "ffaee29b-f599-4812-9914-56693ab32532",
        "type": "BEHAVIOR",
        "referenceNotes": "Revokable",
        "values": {
          "controlUri": "",
          "artifactFiles": [],
          "maps": {
            "codeReferences": [],
            "implementationReferences": [],
            "resources": []
          }
        }
      },
      "isExternal": true,
      "constructorType": "",
      "appliesTo": [],
      "invocations": [
        {
          "id": "dc133e8d-3be9-4aa2-8183-57a38429e8fa",
          "name": "Revoke",
          "description": "A request to revoke a token.",
          "request": {
            "controlMessageName": "RevokeRequest",
            "description": "The request must be made by the issuer determined by a role check.",
            "inputParameters": []
          },
          "response": {
            "controlMessageName": "RevokeResponse",
            "description": "The response, successful if the invoker is the issuer.",
            "outputParameters": [
              {
                "name": "Confirmation",
                "valueDescription": "A confirmation receipt or error may be returned to the invoker based on the outcome of the mint request."
              }
            ]
          },
          "notForRepetition": false,
          "forRepetitionOnly": false
        }
      ],
      "influenceBindings": [],
      "properties": []
    },
    {
      "reference": {
        "id": "a3d02076-6009-4a65-9ed4-2deffe5291e1",
        "type": "BEHAVIOR",
        "referenceNotes": "Delegable",
        "values": {
          "controlUri": "",
          "artifactFiles": [],
          "maps": {
            "codeReferences": [],
            "implementationReferences": [],
            "resources": []
          }
        }
      },
      "isExternal": true,
      "constructorType": "",
      "appliesTo": [],
      "invocations": [
        {
          "id": "2e0fd8e5-2090-4c62-b094-232c32a78022",
          "name": "AllowanceRequest",
          "description": "A Request by a party or account to the owner of a token(s) to have the right to perform a delegated behavior on their behalf.",
          "request": {
            "controlMessageName": "AllowanceRequest",
            "description": "The request",
            "inputParameters": [
              {
                "name": "Quantity",
                "valueDescription": "Number of Tokens to be allowed."
              }
            ]
          },
          "response": {
            "controlMessageName": "AllowanceResponse",
            "description": "The response",
            "outputParameters": [
              {
                "name": "Confirmation",
                "valueDescription": "A confirmation receipt or denial be returned to the allowance requestor."
              }
            ]
          },
          "notForRepetition": false,
          "forRepetitionOnly": false
        },
        {
          "id": "6d5df99d-2f5e-4c7a-aea4-d2d54176abfd",
          "name": "ApproveAllowance",
          "description": "Same control message as the AllowanceRequest.  This could allow for an AllowanceRequest to be forwarded to multiple parties needed to Approve and shield this from the requestor. When all Approvals are obtained, an AllowanceResponse could be sent.",
          "request": {
            "controlMessageName": "ApproveRequest",
            "description": "The request",
            "inputParameters": [
              {
                "name": "Quantity",
                "valueDescription": "Number of Tokens to be allowed."
              }
            ]
          },
          "response": {
            "controlMessageName": "ApproveResponse",
            "description": "The response",
            "outputParameters": [
              {
                "name": "Confirmation",
                "valueDescription": "A confirmation response from the owner approving the an allowance request, indicating a allowance quantity the requestor has the option to invoke the Delegable behaviors on the token(s)."
              }
            ]
          },
          "notForRepetition": false,
          "forRepetitionOnly": false
        }
      ],
      "influenceBindings": [],
      "properties": []
    }
  ],
  "behaviorGroups": [
    {
      "reference": {
        "id": "d7f7aa2c-0488-482c-afd9-74f631e8a113",
        "type": "BEHAVIOR_GROUP",
        "referenceNotes": "Offsetable Supply Control",
        "values": {
          "controlUri": "",
          "artifactFiles": [],
          "maps": {
            "codeReferences": [],
            "implementationReferences": [],
            "resources": []
          }
        }
      },
      "behaviorArtifacts": [
        {
          "reference": {
            "id": "f9224e90-3cab-45bf-b5dc-0175121e2ead",
            "type": "BEHAVIOR",
            "referenceNotes": "Mintable, in Offsetable Supply Control, will be bound to the Roles behavior (issuers) to determine if the requesting issuer is allowed to invoke the behavior.",
            "values": {
              "controlUri": "",
              "artifactFiles": []
            }
          },
          "isExternal": false,
          "constructorType": "",
          "appliesTo": [],
          "invocations": [],
          "influenceBindings": [],
          "properties": []
        },
        {
          "reference": {
            "id": "559c9f31-dd89-4012-a726-40cde5463569",
            "type": "BEHAVIOR",
            "referenceNotes": "Offsetable is not modified from the referenced behavior.",
            "values": {
              "controlUri": "",
              "artifactFiles": []
            }
          },
          "isExternal": false,
          "constructorType": "",
          "appliesTo": [],
          "invocations": [],
          "influenceBindings": [],
          "properties": []
        },
        {
          "reference": {
            "id": "c32726da-9787-4dd8-8de3-d07d1733d0f6",
            "type": "BEHAVIOR",
            "referenceNotes": "Roles support requires that a role or group called 'Issuers' be created that allows for account to be added. These accounts will be allowed to invoke MintTo."
          },
          "isExternal": false,
          "constructorType": "",
          "appliesTo": [
            {
              "id": "f9224e90-3cab-45bf-b5dc-0175121e2ead",
              "type": "BEHAVIOR",
              "visual": "<i>m</i>",
              "tooling": "m",
              "version": "1.0",
              "templateValidated": false
            }
          ],
          "invocations": [],
          "influenceBindings": [
            {
              "influencedId": "af119e58-6d84-4ca6-9656-75e8d312f038",
              "influencedInvocationId": "516b4e2f-4a14-4c4f-a6f2-1419d4af35c6",
              "influenceType": "INTERCEPT",
              "influencingInvocation": {
                "id": "00a665e3-1dda-441e-8262-5750435c153c",
                "name": "RoleCheck",
                "description": "Check to see if the account is the sole encumbrancer by checking the Encumbrances property for the caller's account.",
                "request": {
                  "controlMessageName": "IsInRole",
                  "description": "Checking the Encumbrances property.",
                  "inputParameters": [
                    {
                      "name": "AccountId",
                      "valueDescription": "AccountId of the requestor."
                    }
                  ]
                },
                "response": {
                  "controlMessageName": "True/False",
                  "description": "Respond true if the account is the encumbrancer.",
                  "outputParameters": [
                    {
                      "name": "IsInRole",
                      "valueDescription": "True/False"
                    }
                  ]
                },
                "notForRepetition": false,
                "forRepetitionOnly": false
              },
              "influencedInvocation": {
                "id": "516b4e2f-4a14-4c4f-a6f2-1419d4af35c6",
                "name": "TransferFrom",
                "description": ">A transfer request will invoke a transfer from the owner of the token to the party or account provided in the To field of the request. For fungible or dividable non-fungible tokens, this request may also include value in the Amount field of the request to transfer more than one token of the class in a single request.",
                "request": {
                  "controlMessageName": "TransferFromRequest",
                  "description": "The request",
                  "inputParameters": [
                    {
                      "name": "From",
                      "valueDescription": "AccountId to transfer ownership from."
                    },
                    {
                      "name": "To",
                      "valueDescription": "AccountId to transfer ownership to."
                    },
                    {
                      "name": "Quantity",
                      "valueDescription": "Number of tokens to transfer."
                    }
                  ]
                },
                "response": {
                  "controlMessageName": "TransferFromResponse",
                  "description": "The response",
                  "outputParameters": [
                    {
                      "name": "Confirmation",
                      "valueDescription": "A confirmation receipt or error may be returned to the owner based on the outcome of the transfer from request."
                    }
                  ]
                },
                "notForRepetition": false,
                "forRepetitionOnly": false
              }
            },
            {
              "influencedId": "f9224e90-3cab-45bf-b5dc-0175121e2ead",
              "influencedInvocationId": "70499b23-a1dd-4c87-90d6-6e45400f28b5",
              "influenceType": "INTERCEPT",
              "influencingInvocation": {
                "id": "00a665e3-1dda-441e-8262-5750435c153c",
                "name": "RoleCheck",
                "description": "Check to see if the account is in the Role called 'Issuers'",
                "request": {
                  "controlMessageName": "IsInRole",
                  "description": "Checking the 'Issuers' role.",
                  "inputParameters": [
                    {
                      "name": "AccountId",
                      "valueDescription": "AccountId of the requestor."
                    }
                  ]
                },
                "response": {
                  "controlMessageName": "True/False",
                  "description": "Respond true if the account is in the 'Issuers' role.",
                  "outputParameters": [
                    {
                      "name": "IsInRole",
                      "valueDescription": "True/False"
                    }
                  ]
                },
                "notForRepetition": false,
                "forRepetitionOnly": false
              },
              "influencedInvocation": {
                "id": "70499b23-a1dd-4c87-90d6-6e45400f28b5",
                "name": "MintTo",
                "description": "A request to create new token instances in the class by the owner or a party or account in a role that is granted this permission to another party or account.  Requires a To and Quantity fields in the request.",
                "request": {
                  "controlMessageName": "MintToRequest",
                  "description": "The request",
                  "inputParameters": [
                    {
                      "name": "ToAccount",
                      "valueDescription": "Account Id to mint the tokens to."
                    },
                    {
                      "name": "Quantity",
                      "valueDescription": "Number of new tokens to create."
                    }
                  ]
                },
                "response": {
                  "controlMessageName": "MintToResponse",
                  "description": "The response",
                  "outputParameters": [
                    {
                      "name": "Confirmation",
                      "valueDescription": "A confirmation receipt or error may be returned to the invoker based on the outcome of the MintTo request."
                    }
                  ]
                },
                "notForRepetition": false,
                "forRepetitionOnly": false
              }
            },
            {
              "influencedId": "ffaee29b-f599-4812-9914-56693ab32532",
              "influencedInvocationId": "dc133e8d-3be9-4aa2-8183-57a38429e8fa",
              "influenceType": "INTERCEPT",
              "influencingInvocation": {
                "id": "00a665e3-1dda-441e-8262-5750435c153c",
                "name": "RoleCheck",
                "description": "Check to see if the account is in the Role called 'Issuer'",
                "request": {
                  "controlMessageName": "IsInRole",
                  "description": "Checking the 'Issuer' role.",
                  "inputParameters": [
                    {
                      "name": "AccountId",
                      "valueDescription": "AccountId of the requestor."
                    }
                  ]
                },
                "response": {
                  "controlMessageName": "True/False",
                  "description": "Respond true if the account is in the 'Issuer' role.",
                  "outputParameters": [
                    {
                      "name": "IsInRole",
                      "valueDescription": "True/False"
                    }
                  ]
                },
                "notForRepetition": false,
                "forRepetitionOnly": false
              },
              "influencedInvocation": {
                "id": "dc133e8d-3be9-4aa2-8183-57a38429e8fa",
                "name": "Revoke",
                "description": "A request to revoke a token.",
                "request": {
                  "controlMessageName": "RevokeRequest",
                  "description": "The request must be made by the issuer determined by a role check.",
                  "inputParameters": [
                  ]
                },
                "response": {
                  "controlMessageName": "RevokeResponse",
                  "description": "The response, successful if the invoker is the issuer.",
                  "outputParameters": [
                    {
                      "name": "Confirmation",
                      "valueDescription": "A confirmation receipt or error may be returned to the invoker based on the outcome of the mint request."
                    }
                  ]
                },
                "notForRepetition": false,
                "forRepetitionOnly": false
              }
            },
            {
              "influencedId": "41df6a71-d7d4-441c-93e9-856307606750",
              "influencedInvocationId": "2a90d152-699b-4b85-a0e5-5436dae4650e",
              "influenceType": "INTERCEPT",
              "influencingInvocation": {
                "id": "00a665e3-1dda-441e-8262-5750435c153c",
                "name": "RoleCheck",
                "description": "Check to see if the account is in the Role called 'Issuer'",
                "request": {
                  "controlMessageName": "IsInRole",
                  "description": "Checking the 'Issuer' role.",
                  "inputParameters": [
                    {
                      "name": "AccountId",
                      "valueDescription": "AccountId of the requestor."
                    }
                  ]
                },
                "response": {
                  "controlMessageName": "True/False",
                  "description": "Respond true if the account is in the 'Issuer' role.",
                  "outputParameters": [
                    {
                      "name": "IsInRole",
                      "valueDescription": "True/False"
                    }
                  ]
                },
                "notForRepetition": false,
                "forRepetitionOnly": false
              },
              "influencedInvocation": {
                "id": "2a90d152-699b-4b85-a0e5-5436dae4650e",
                "name": "SetReplacement",
                "description": "Only the issuer can set the Issued Amount and is typically done during construction not after creation. A role check for issuer is required for invocation.",
                "request": {
                  "controlMessageName": "SetReplacementRequest",
                  "inputParameters": [
                    {
                      "name": "ReplacesId",
                      "valueDescription": "Set the Id of the token being replaced."
                    },
                    {
                      "name": "ReplacementDate",
                      "valueDescription": "Set the date of replacement."
                    },
                    {
                      "name": "ReplacementNotes",
                      "valueDescription": "Record notes about why the token is being replaced."
                    }
                  ],
                  "description": "The request"
                },
                "response": {
                  "controlMessageName": "SetReplacementResponse",
                  "outputParameters": [
                    {
                      "name": "Confirmation",
                      "valueDescription": "Returning the value of the set request."
                    }
                  ],
                  "description": "The response"
                },
                "notForRepetition": false,
                "forRepetitionOnly": false
              }
            }
          ],
          "properties": [
            {
              "name": "Role",
              "valueDescription": "A group or list an account can be a member or be in.",
              "templateValue": "Issuers",
              "propertyInvocations": [
                {
                  "id": "",
                  "name": "GetIssuers",
                  "description": "Request the the list of member accounts in the 'Issuers' role.",
                  "request": {
                    "controlMessageName": "GetIssuersRequest",
                    "description": "The request",
                    "inputParameters": []
                  },
                  "response": {
                    "controlMessageName": "GetIssuersResponse",
                    "description": "The response",
                    "outputParameters": [
                      {
                        "name": "Members",
                        "valueDescription": "Returning the list of accounts in the 'Issuers' role."
                      }
                    ]
                  },
                  "notForRepetition": false,
                  "forRepetitionOnly": false
                },
                {
                  "id": "600357f8-0499-47f8-87a5-eedf4ad034af",
                  "name": "AddRoleMember",
                  "description": "Add a member to the group or role property.",
                  "request": {
                    "controlMessageName": "AddRoleMemberRequest",
                    "description": "The request",
                    "inputParameters": [
                      {
                        "name": "RoleName",
                        "valueDescription": "Value is always set to 'Issuers'"
                      },
                      {
                        "name": "AccountAddress",
                        "valueDescription": "Address, name or identifier of the account to be added to the 'Issuers' role."
                      }
                    ]
                  },
                  "response": {
                    "controlMessageName": "AddRoleMemberResponse",
                    "description": "The response",
                    "outputParameters": [
                      {
                        "name": "Added",
                        "valueDescription": "True or False."
                      }
                    ]
                  },
                  "notForRepetition": false,
                  "forRepetitionOnly": false
                },
                {
                  "id": "97e160bb-6c60-4f1d-923b-813b07b89638",
                  "name": "RemoveRoleMember",
                  "description": "Remove a member to the group or role property.",
                  "request": {
                    "controlMessageName": "RemoveRoleMemberRequest",
                    "description": "The request",
                    "inputParameters": [
                      {
                        "name": "RoleName",
                        "valueDescription": "Always set to 'Issuers'"
                      },
                      {
                        "name": "AccountAddress",
                        "valueDescription": "Address, name or identifier of the account to be removed from the role."
                      }
                    ]
                  },
                  "response": {
                    "controlMessageName": "RemoveRoleMemberResponse",
                    "description": "The response",
                    "outputParameters": [
                      {
                        "name": "Added",
                        "valueDescription": "True or False."
                      }
                    ]
                  },
                  "notForRepetition": false,
                  "forRepetitionOnly": false
                },
                {
                  "id": "e42b1b16-074a-4d7d-b9f9-f69a2397a21b",
                  "name": "IsInRole",
                  "description": "Check to see if an account is in the role.",
                  "request": {
                    "controlMessageName": "IsInRoleRequest",
                    "description": "The request may be internal only and not exposed externally.",
                    "inputParameters": [
                      {
                        "name": "RoleName",
                        "valueDescription": "Always be bound to 'Issuers'"
                      },
                      {
                        "name": "AccountAddress",
                        "valueDescription": "Address, name or identifier of the account to be checked."
                      }
                    ]
                  },
                  "response": {
                    "controlMessageName": "IsInRoleRequestResponse",
                    "description": "The response",
                    "outputParameters": [
                      {
                        "name": "InRole",
                        "valueDescription": "True or False."
                      }
                    ]
                  },
                  "notForRepetition": false,
                  "forRepetitionOnly": false
                }
              ],
              "influenceBindings": [],
              "properties": [],
              "repeated": false
            }
          ]
        }
      ]
    }
  ],
  "propertySets": [
    {
      "reference": {
        "id": "3b67dfe4-a22d-4e45-a7b5-69a2b00ff982",
        "type": "PROPERTY_SET",
        "referenceNotes": "Core Carbon Principles",
        "values": {
          "controlUri": "",
          "artifactFiles": [],
          "maps": {
            "codeReferences": [],
            "implementationReferences": [],
            "resources": []
          }
        }
      },
      "representationType": "COMMON",
      "properties": [
        {
          "name": "CoreCarbonPrinciples",
          "valueDescription": "Contains the values for the principles.",
          "templateValue": "",
          "propertyInvocations": [
            {
              "id": "24eea114-99e4-4bd8-95b8-d05d0edbe4e9",
              "name": "GetCoreCarbonPrinciples",
              "description": "Request the Core Carbon Principles Info.",
              "request": {
                "controlMessageName": "GetCoreCarbonPrinciplesRequest",
                "description": "The request",
                "inputParameters": []
              },
              "response": {
                "controlMessageName": "GetCoreCarbonPrinciplesResponse",
                "description": "The response",
                "outputParameters": [
                  {
                    "name": "CoreCarbonPrinciples",
                    "valueDescription": "Returning the CoreCarbonPrinciples values - see control file ecological-claim.proto."
                  }
                ]
              },
              "notForRepetition": false,
              "forRepetitionOnly": false
            },
            {
              "id": "c188b6b2-f4a3-4f85-a54a-eb64bc37ce96",
              "name": "SetCoreCarbonPrinciples",
              "description": "Set the Core Carbon Principles",
              "request": {
                "controlMessageName": "SetCoreCarbonPrinciplesRequest",
                "description": "The request",
                "inputParameters": [
                  {
                    "name": "CoreCarbonPrinciples",
                    "valueDescription": "Set the EcologicalProjectInfo values - see control file ecological-project-info.proto."
                  }
                ]
              },
              "response": {
                "controlMessageName": "SetCoreCarbonPrinciplesResponse",
                "description": "The response",
                "outputParameters": [
                  {
                    "name": "Confirmation",
                    "valueDescription": "Returning the value of the set request."
                  }
                ]
              },
              "notForRepetition": false,
              "forRepetitionOnly": false
            }
          ],
          "influenceBindings": [],
          "properties": [
            {
              "name": "CoreCarbonPrinciples",
              "valueDescription": "Contains the values for the CoreCarbonPrinciples.",
              "templateValue": "",
              "propertyInvocations": [],
              "influenceBindings": [],
              "properties": [
                {
                  "name": "AssetId",
                  "valueDescription": "typically the issuing verifiers master id or serial number that resides on their registry system. Could be empty or the same as the token's id if not needed.",
                  "templateValue": "",
                  "propertyInvocations": [],
                  "influenceBindings": [],
                  "properties": [],
                  "repeated": false
                },
                {
                  "name": "IssuanceDate",
                  "valueDescription": "Refers to the date of issuance usually in the DD/MM/YYYY or MM/DD/YYYY.",
                  "templateValue": "",
                  "propertyInvocations": [],
                  "influenceBindings": [],
                  "properties": [],
                  "repeated": false
                },
                {
                  "name": "GenerationType",
                  "valueDescription": "An ecological product can be a generated value based on verified historical results or ex-ante, meaning a predicted result. See the enum type in ecological-asset.proto for example.",
                  "templateValue": "",
                  "propertyInvocations": [],
                  "influenceBindings": [],
                  "properties": [],
                  "repeated": false
                },
                {
                  "name": "VerificationStandard",
                  "valueDescription": "The verification standard used to determine and issue a ecological benefit token. These can be a voluntary or compliance/regulatory standard. See the ecological-asset.proto enum for an example.",
                  "templateValue": "",
                  "propertyInvocations": [],
                  "influenceBindings": [],
                  "properties": [],
                  "repeated": false
                },
                {
                  "name": "Leakage",
                  "valueDescription": "A decrease in sequestration or an increase in emissions outside the boundaries of project, program activities resulting from project, and/or program implementation. Leakage may be caused by shifting of the activities of people present in the project area or by market effects whereby emission reductions are countered by emissions created by shifts in supply of and demand for the products and services affected by the project.",
                  "templateValue": "",
                  "propertyInvocations": [],
                  "influenceBindings": [],
                  "properties": [],
                  "repeated": false
                },
                {
                  "name": "Additionality",
                  "valueDescription": " A score for the principle that a project activity is additional if the resulting emission reductions are lower than what would have happened in the absence of the activity.",
                  "templateValue": "",
                  "propertyInvocations": [],
                  "influenceBindings": [],
                  "properties": [],
                  "repeated": false
                },
                {
                  "name": "ReferenceToBenefitProjectClaim",
                  "valueDescription": "A compound reference to the full id path for the benefit claim data: projectId/modularBenefitProjectId/claimId.",
                  "templateValue": "",
                  "propertyInvocations": [],
                  "influenceBindings": [],
                  "properties": [],
                  "repeated": false
                },
                {
                  "name": "ReferenceToVerificationContractProcessedClaim",
                  "valueDescription": "A reference to the full id path for the verification contract/processedClaims/ProcessedClaimId.",
                  "templateValue": "",
                  "propertyInvocations": [],
                  "influenceBindings": [],
                  "properties": [],
                  "repeated": false
                }
              ],
              "repeated": false
            }
          ],
          "repeated": false
        }
      ],
      "propertySets": [
        {
          "reference": {
            "id": "d7607f63-5e29-424f-a991-3f05c8f0daf7",
            "type": "PROPERTY_SET",
            "referenceNotes": "Date Range Property Set for the CCP's Claim.",
            "values": {
              "controlUri": "",
              "artifactFiles": []
            }
          },
          "representationType": "COMMON",
          "properties": [
            {
              "name": "DateRange",
              "valueDescription": "Contains the date range.",
              "templateValue": "",
              "propertyInvocations": [
                {
                  "id": "e3b45dcc-f767-4c9d-a081-9b0f91eb728c",
                  "name": "GetDateRange",
                  "description": "Request the value of the date",
                  "request": {
                    "controlMessageName": "GetDateRangeRequest",
                    "description": "The request",
                    "inputParameters": []
                  },
                  "response": {
                    "controlMessageName": "GetDateRangeResponse",
                    "description": "The response",
                    "outputParameters": [
                      {
                        "name": "StartDate",
                        "valueDescription": "Returning the simple date value."
                      },
                      {
                        "name": "StartTimeStamp",
                        "valueDescription": "Returning the granular start timestamp."
                      },
                      {
                        "name": "EndDate",
                        "valueDescription": "Returning the simple date value."
                      },
                      {
                        "name": "EndTimeStamp",
                        "valueDescription": "Returning the granular start timestamp."
                      }
                    ]
                  },
                  "notForRepetition": false,
                  "forRepetitionOnly": false
                },
                {
                  "id": "269dfe9a-bf3e-4416-af54-4a49a0e408d0",
                  "name": "SetDateRange",
                  "description": "Set the Value of the File Property, note if Roles should be applied to the Setter.",
                  "request": {
                    "controlMessageName": "SetDateRangeRequest",
                    "description": "The request",
                    "inputParameters": [
                      {
                        "name": "StartDate",
                        "valueDescription": "Set the simple date value."
                      },
                      {
                        "name": "StartTimeStamp",
                        "valueDescription": "Set the granular start timestamp."
                      },
                      {
                        "name": "EndDate",
                        "valueDescription": "Set the simple date value."
                      },
                      {
                        "name": "EndTimeStamp",
                        "valueDescription": "Set the granular start timestamp."
                      }
                    ]
                  },
                  "response": {
                    "controlMessageName": "SetDateRangeResponse",
                    "description": "The response",
                    "outputParameters": [
                      {
                        "name": "Confirmation",
                        "valueDescription": "Returning the value of the set request."
                      }
                    ]
                  },
                  "notForRepetition": false,
                  "forRepetitionOnly": false
                }
              ],
              "influenceBindings": [],
              "properties": [],
              "repeated": false
            }
          ],
          "propertySets": [],
          "repeated": false
        }
      ],
      "repeated": false
    },
    {
      "reference": {
        "id": "7c116214-ba38-4f85-99b2-0a9017f8a33f",
        "type": "PROPERTY_SET",
        "referenceNotes": "Core Carbon Attributes",
        "values": {
          "controlUri": "",
          "artifactFiles": [],
          "maps": {
            "codeReferences": [],
            "implementationReferences": [],
            "resources": []
          }
        }
      },
      "representationType": "COMMON",
      "properties": [
        {
          "name": "NetNegativityScores",
          "valueDescription": "Contains the values for the Net Negativity Scores.",
          "templateValue": "",
          "propertyInvocations": [
            {
              "id": "183aae17-e5a0-46b5-8a56-3be23d313524",
              "name": "GetNetNegativityScores",
              "description": "Request the Net Negativity Scores.",
              "request": {
                "controlMessageName": "GetNetNegativityScoresRequest",
                "description": "The request",
                "inputParameters": []
              },
              "response": {
                "controlMessageName": "GetNetNegativityScoresResponse",
                "description": "The response",
                "outputParameters": [
                  {
                    "name": "NetNegativityScores",
                    "valueDescription": "Returning the NetNegativityScores values - see control file core-carbon-attributes.proto."
                  }
                ]
              },
              "notForRepetition": false,
              "forRepetitionOnly": false
            },
            {
              "id": "d12984f3-a640-4635-ae65-ea7e81533190",
              "name": "SetNetNegativityScores",
              "description": "Set the Net Negativity Scores",
              "request": {
                "controlMessageName": "SetNetNegativityScoresRequest",
                "description": "The request",
                "inputParameters": [
                  {
                    "name": "NetNegativityScores",
                    "valueDescription": "Set the NetNegativityScores values - see control file core-carbon-attributes.proto."
                  }
                ]
              },
              "response": {
                "controlMessageName": "SetNetNegativityScoresResponse",
                "description": "The response",
                "outputParameters": [
                  {
                    "name": "Confirmation",
                    "valueDescription": "Returning the value of the set request."
                  }
                ]
              },
              "notForRepetition": true,
              "forRepetitionOnly": false
            }
          ],
          "influenceBindings": [],
          "properties": [
            {
              "name": "NetNegativityScores",
              "valueDescription": "Contains the values for the Net Negativity Scores.",
              "templateValue": "",
              "propertyInvocations": [],
              "influenceBindings": [],
              "properties": [
                {
                  "name": "Vintage",
                  "valueDescription": "Refers to the year that the emissions reduction or ecological benefit took place. Usually in a YYYY format.",
                  "templateValue": "",
                  "propertyInvocations": [],
                  "influenceBindings": [],
                  "properties": [],
                  "repeated": false
                },
                {
                  "name": "Storage",
                  "valueDescription": "Are either Biological or Geological storage of sequestered carbon.",
                  "templateValue": "",
                  "propertyInvocations": [],
                  "influenceBindings": [],
                  "properties": [],
                  "repeated": false
                },
                {
                  "name": "ClearRemovals",
                  "valueDescription": "Are either clearly 100% removals (afforestation-reforestation) or are ex-post verified as removal volumes according to a published MRV methodology and did NOT increase N20 and/or CH4.",
                  "templateValue": "",
                  "propertyInvocations": [],
                  "influenceBindings": [],
                  "properties": [],
                  "repeated": false
                }
              ],
              "repeated": false
            }
          ],
          "repeated": false
        }
      ],
      "propertySets": [
        {
          "reference": {
            "id":"04d8de6f-08dc-4830-8f15-756bc4a12853",
            "type": "PROPERTY_SET",
            "referenceNotes": "Durability properties if a removal.",
            "values": {
              "controlUri": "",
              "artifactFiles": [],
              "maps": null
            }
        },
          "representationType": "COMMON",
          "properties":[
            {
            "name": "Durability",
            "valueDescription": "Contains the values of durability.",
            "templateValue": "",
            "propertyInvocations": [
              {
                "id": "589f97b4-26e6-4981-9ec1-8e02f1b61e26",
                "name": "GetDurability",
                "description": "Request the durability info.",
                "request": {
                  "controlMessageName": "GetDurabilityRequest",
                  "inputParameters": [],
                  "description": "The request"
                },
                "response": {
                  "controlMessageName": "GetDurabilityResponse",
                  "outputParameters": [
                    {
                      "name": "Durability",
                      "valueDescription": "Returning the Durability values - see control file durability.proto."
                    }
                  ],
                  "description": "The response"
                }
              },
              {
                "id": "35f4ce83-03d7-4a53-a374-bca068df3f40",
                "name": "SetDurability",
                "description": "Set the Durability",
                "request": {
                  "controlMessageName": "SetDurabilityRequest",
                  "inputParameters": [
                    {
                      "name": "Durability",
                      "valueDescription": "Set the Durability values - see control file durability.proto."
                    }
                  ],
                  "description": "The request"
                },
                "response": {
                  "controlMessageName": "SetDurabilityResponse",
                  "outputParameters": [
                    {
                      "name": "Confirmation",
                      "valueDescription": "Returning the value of the set request."
                    }
                  ],
                  "description": "The response"
                },
                "notForRepetition": true,
                "forRepetitionOnly": false
            }
          ],
          "influenceBindings": [],
          "properties": [
            {
                "name": "Durability",
                "valueDescription": "Contains the values for Durability.",
                "templateValue": "",
                "properties":
                [
                  {
                    "name": "Storage",
                    "valueDescription": "A selection from a list of storage types, ex. see the durability.proto enumeration of types.",
                    "templateValue": ""
                  },
                  {
                    "name": "Years",
                    "valueDescription": "The length in years the carbon is expected to be sequestered for.",
                    "templateValue": ""
                  },
                  {
                    "name": "Degradable",
                    "valueDescription": "If or when degradation of the sequestration can be expected.",
                    "templateValue": "",
                    "properties":
                    [
                      {
                        "name": "Percentage",
                        "valueDescription": "A 0 = no degradation possible, 100 = all sequestered should be expected to be released",
                        "templateValue": ""
                      },
                      {
                        "name": "Factor",
                        "valueDescription": "The factor of 25 = .25 per year if linear or exponential starts at 25% of durability years.",
                        "templateValue": ""
                      },
                      {
                        "name": "DegradationType",
                        "valueDescription": "A selection from a list of degradation types, ex. see the durability.proto enumeration of types.",
                        "templateValue": ""
                      }
                    ]
                  }
                ]
            }
            ]
            }
          ],
          "repeated": false
        },
        {
          "reference": {
            "id": "a60326d6-399b-4128-bd99-9279283b0380",
            "type": "PROPERTY_SET",
            "referenceNotes": "Classification for the Core Carbon Attributes.",
            "values": {
              "controlUri": "",
              "artifactFiles": []
            }
          },
          "representationType": "COMMON",
          "properties": [
            {
              "name": "Classification",
              "valueDescription": "Contains the values for the CCA classification as outlined in the cca-classification.proto.",
              "templateValue": "",
              "propertyInvocations": [
                {
                  "id": "cd258398-7c11-44b7-b28c-eaee5bc5b8f0",
                  "name": "GetClassification",
                  "description": "Request the list of the Classification.",
                  "request": {
                    "controlMessageName": "GetClassificationRequest",
                    "description": "The request",
                    "inputParameters": []
                  },
                  "response": {
                    "controlMessageName": "GetClassificationResponse",
                    "description": "The response",
                    "outputParameters": [
                      {
                        "name": "Category",
                        "valueDescription": "Returning the category."
                      },
                      {
                        "name": "Method",
                        "valueDescription": "Returning method."
                      }
                    ]
                  },
                  "notForRepetition": false,
                  "forRepetitionOnly": false
                },
                {
                  "id": "e4472298-014c-4d3b-ab6a-b2a9d260e398",
                  "name": "SetClassification",
                  "description": "Set the values for the property, only the Issue should be able to set this property.",
                  "request": {
                    "controlMessageName": "SetClassificationRequest",
                    "description": "The request",
                    "inputParameters": [
                      {
                        "name": "Category",
                        "valueDescription": "The Category - either Reduction or Removal."
                      },
                      {
                        "name": "Method",
                        "valueDescription": "The Method - either Natural or Technology."
                      }
                    ]
                  },
                  "response": {
                    "controlMessageName": "SetClassificationResponse",
                    "description": "The response",
                    "outputParameters": [
                      {
                        "name": "Confirmation",
                        "valueDescription": "Returning the Classification of the set request."
                      }
                    ]
                  },
                  "notForRepetition": false,
                  "forRepetitionOnly": false
                }
              ],
              "influenceBindings": [],
              "properties": [
                {
                  "name": "Classification",
                  "valueDescription": "Contains the SetClassification property values.",
                  "templateValue": "",
                  "propertyInvocations": [],
                  "influenceBindings": [],
                  "properties": [
                    {
                      "name": "Category",
                      "valueDescription": "Reduction or Removal",
                      "templateValue": "",
                      "propertyInvocations": [],
                      "influenceBindings": [],
                      "properties": [],
                      "repeated": false
                    },
                    {
                      "name": "Method",
                      "valueDescription": "Natural or Technology",
                      "templateValue": "",
                      "propertyInvocations": [],
                      "influenceBindings": [],
                      "properties": [],
                      "repeated": false
                    }
                  ],
                  "repeated": false
                }
              ],
              "repeated": false
            }
          ],
          "propertySets": [],
          "repeated": true
        },
        {
          "reference": {
            "id": "41df6a71-d7d4-441c-93e9-856307606750",
            "type": "PROPERTY_SET",
            "referenceNotes": "Replacement Property Set for the Core Carbon Principles.",
            "values": {
              "controlUri": "",
              "artifactFiles": []
            }
          },
          "representationType": "COMMON",
          "properties": [
            {
              "name": "Replacement",
              "valueDescription": "Contains the Id, Date and notes about the replacement.",
              "templateValue": "",
              "propertyInvocations": [
                {
                  "id": "176861e6-599a-48d6-ba3f-ffff9bfbfad1",
                  "name": "GetReplacement",
                  "description": "Request the Replacement Values.",
                  "request": {
                    "controlMessageName": "GetReplacementRequest",
                    "description": "The request",
                    "inputParameters": []
                  },
                  "response": {
                    "controlMessageName": "GetReplacementResponse",
                    "description": "The response",
                    "outputParameters": [
                      {
                        "name": "Replacement",
                        "valueDescription": "Returning the Replacement data."
                      }
                    ]
                  },
                  "notForRepetition": false,
                  "forRepetitionOnly": false
                },
                {
                  "id": "2a90d152-699b-4b85-a0e5-5436dae4650e",
                  "name": "SetReplacement",
                  "description": "Only the issuer can set the Issued Amount and is typically done during construction not after creation. A role check for issuer is required for invocation.",
                  "request": {
                    "controlMessageName": "SetReplacementRequest",
                    "description": "The request",
                    "inputParameters": [
                      {
                        "name": "ReplacesId",
                        "valueDescription": "Set the Id of the token being replaced."
                      },
                      {
                        "name": "ReplacementDate",
                        "valueDescription": "Set the date of replacement."
                      },
                      {
                        "name": "ReplacementNotes",
                        "valueDescription": "Record notes about why the token is being replaced."
                      }
                    ]
                  },
                  "response": {
                    "controlMessageName": "SetReplacementResponse",
                    "description": "The response",
                    "outputParameters": [
                      {
                        "name": "Confirmation",
                        "valueDescription": "Returning the value of the set request."
                      }
                    ]
                  },
                  "notForRepetition": false,
                  "forRepetitionOnly": false
                }
              ],
              "influenceBindings": [],
              "properties": [
                {
                  "name": "Adjustment",
                  "valueDescription": "Contains the adjustment from the issuer.",
                  "templateValue": "",
                  "propertyInvocations": [],
                  "influenceBindings": [],
                  "properties": [
                    {
                      "name": "ReplacesId",
                      "valueDescription": "Contains the id of the token it is replacing.",
                      "templateValue": "",
                      "propertyInvocations": [],
                      "influenceBindings": [],
                      "properties": [],
                      "repeated": false
                    },
                    {
                      "name": "ReplacementDate",
                      "valueDescription": "Contains the date the adjustment or replacement made by issuer.",
                      "templateValue": "",
                      "propertyInvocations": [],
                      "influenceBindings": [],
                      "properties": [],
                      "repeated": false
                    },
                    {
                      "name": "ReplacementNotes",
                      "valueDescription": "Contains notes on why the replacement or adjustment is needed.",
                      "templateValue": "",
                      "propertyInvocations": [],
                      "influenceBindings": [],
                      "properties": [],
                      "repeated": false
                    }
                  ],
                  "repeated": false
                }
              ],
              "repeated": false
            }
          ],
          "propertySets": [],
          "repeated": false
        },
        {
          "reference": {
            "id": "5a8c69f6-f3c5-4bc8-82d0-d3fbf90b59c7",
            "type": "PROPERTY_SET",
            "referenceNotes": "Co-benefit Property Set for this Ecological Benefit Token.",
            "values": {
              "controlUri": "",
              "artifactFiles": []
            }
          },
          "representationType": "COMMON",
          "properties": [
            {
              "name": "CoBenefits",
              "valueDescription": "Contains a list or collection of Co-benefit.",
              "templateValue": "",
              "propertyInvocations": [
                {
                  "id": "db6096c6-5fe0-47ed-90d5-6215c2a2780c",
                  "name": "GetCoBenefits",
                  "description": "Request the the list of CoBenefits.",
                  "request": {
                    "controlMessageName": "GetCoBenefits",
                    "description": "The request",
                    "inputParameters": []
                  },
                  "response": {
                    "controlMessageName": "GetCoBenefitsResponse",
                    "description": "The response",
                    "outputParameters": [
                      {
                        "name": "CoBenefits",
                        "valueDescription": "Returning the CoBenefits collection for asset."
                      }
                    ]
                  },
                  "notForRepetition": false,
                  "forRepetitionOnly": false
                },
                {
                  "id": "eefc1d94-7d09-4e1b-843d-76b51850021a",
                  "name": "AddCoBenefit",
                  "description": "Add a co-benefit to the asset.",
                  "request": {
                    "controlMessageName": "AddCoBenefitRequest",
                    "description": "The request",
                    "inputParameters": [
                      {
                        "name": "CoBenefit",
                        "valueDescription": "The CoBenefit type to add to the asset."
                      }
                    ]
                  },
                  "response": {
                    "controlMessageName": "AddCoBenefitResponse",
                    "description": "The response",
                    "outputParameters": [
                      {
                        "name": "Confirmation",
                        "valueDescription": "Returning a confirmation for the add request."
                      }
                    ]
                  },
                  "notForRepetition": false,
                  "forRepetitionOnly": false
                },
                {
                  "id": "85d15d32-2ba7-4603-978d-11cbccbba9f0",
                  "name": "RemoveCoBenefit",
                  "description": "Remove a co-benefit to the asset.",
                  "request": {
                    "controlMessageName": "RemoveCoBenefitRequest",
                    "description": "The request",
                    "inputParameters": [
                      {
                        "name": "CoBenefit",
                        "valueDescription": "The CoBenefit type to remove to the asset."
                      }
                    ]
                  },
                  "response": {
                    "controlMessageName": "RemovedCoBenefitResponse",
                    "description": "The response",
                    "outputParameters": [
                      {
                        "name": "Confirmation",
                        "valueDescription": "Returning a confirmation for the remove request."
                      }
                    ]
                  },
                  "notForRepetition": false,
                  "forRepetitionOnly": false
                }
              ],
              "influenceBindings": [],
              "properties": [
                {
                  "name": "CoBenefit",
                  "valueDescription": "Contains the values for the CoBenefit.",
                  "templateValue": "",
                  "propertyInvocations": [],
                  "influenceBindings": [],
                  "properties": [
                    {
                      "name": "BenefitCategory",
                      "valueDescription": "A selection from a list of categories, ex. see the co-benefit.proto enumeration of BenefitCategories.",
                      "templateValue": "",
                      "propertyInvocations": [],
                      "influenceBindings": [],
                      "properties": [],
                      "repeated": false
                    },
                    {
                      "name": "Description",
                      "valueDescription": "A description of the co-benefit that is not captured via the category.",
                      "templateValue": "",
                      "propertyInvocations": [],
                      "influenceBindings": [],
                      "properties": [],
                      "repeated": false
                    },
                    {
                      "name": "RatingScore",
                      "valueDescription": "A placeholder for some kind of rating or scoring of the relative co-benefit.",
                      "templateValue": "",
                      "propertyInvocations": [],
                      "influenceBindings": [],
                      "properties": [],
                      "repeated": false
                    }
                  ],
                  "repeated": false
                }
              ],
              "repeated": false
            }
          ],
          "propertySets": [],
          "repeated": true
        },
        {
          "reference": {
            "id": "f0ac1971-57dc-47b3-beeb-c1b9433457a2",
            "type": "PROPERTY_SET",
            "referenceNotes": "Paris Accord Compliance Property Set for this CCP Token.",
            "values": {
              "controlUri": "",
              "artifactFiles": []
            }
          },
          "representationType": "COMMON",
          "properties": [
            {
              "name": "PACompliance",
              "valueDescription": "Contains the values for the properties.",
              "templateValue": "",
              "propertyInvocations": [
                {
                  "id": "13025cef-e870-438d-8396-b52feaffa2c6",
                  "name": "GetPACompliance",
                  "description": "Request the Ecological Project Info.",
                  "request": {
                    "controlMessageName": "GetPAComplianceRequest",
                    "description": "The request",
                    "inputParameters": []
                  },
                  "response": {
                    "controlMessageName": "GetPAComplianceResponse",
                    "description": "The response",
                    "outputParameters": [
                      {
                        "name": "PACompliance",
                        "valueDescription": "Returning the PACompliance values - see control file paris-agreement-compliance.proto."
                      }
                    ]
                  },
                  "notForRepetition": false,
                  "forRepetitionOnly": false
                },
                {
                  "id": "144677f5-f6e8-4cba-af68-62c12f1cd606",
                  "name": "SetPACompliance",
                  "description": "Set the Ecological Project Info.",
                  "request": {
                    "controlMessageName": "SetPAComplianceRequest",
                    "description": "The request",
                    "inputParameters": [
                      {
                        "name": "PACompliance",
                        "valueDescription": "Set the PACompliance values - see control file paris-agreement-compliance.proto."
                      }
                    ]
                  },
                  "response": {
                    "controlMessageName": "SetPAComplianceResponse",
                    "description": "The response",
                    "outputParameters": [
                      {
                        "name": "Confirmation",
                        "valueDescription": "Returning the value of the set request."
                      }
                    ]
                  },
                  "notForRepetition": true,
                  "forRepetitionOnly": false
                }
              ],
              "influenceBindings": [],
              "properties": [
                {
                  "name": "CA",
                  "valueDescription": "Contains the value for the Corresponding Adjustment.",
                  "templateValue": "",
                  "propertyInvocations": [],
                  "influenceBindings": [],
                  "properties": [
                    {
                      "name": "CorrespondingAdjustment",
                      "valueDescription": "Either - None, ParisAgreementCompliant or ParisAgreementPendingCompliance",
                      "templateValue": "",
                      "propertyInvocations": [],
                      "influenceBindings": [],
                      "properties": [],
                      "repeated": false
                    }
                  ],
                  "repeated": false
                }
              ],
              "repeated": false
            }
          ],
          "propertySets": [
            {
              "reference": {
                "id": "ce1ca787-d018-4eb2-90e7-03b8876197bf",
                "type": "PROPERTY_SET",
                "referenceNotes": "Verified Link Property Set for an optional Letter of Approval.",
                "values": {
                  "controlUri": "",
                  "artifactFiles": []
                }
              },
              "representationType": "COMMON",
              "properties": [
                {
                  "name": "LetterOfApproval",
                  "valueDescription": "Contains a Verified Link to the Letter Of Approval.",
                  "templateValue": "",
                  "propertyInvocations": [
                    {
                      "id": "1df45470-2e7d-4ee3-9da8-eefe203e19fd",
                      "name": "GetLetterOfApproval",
                      "description": "Request the a Verified Link.",
                      "request": {
                        "controlMessageName": "GetLetterOfApprovalRequest",
                        "description": "The request",
                        "inputParameters": []
                      },
                      "response": {
                        "controlMessageName": "GetLetterOfApprovalResponse",
                        "description": "The response",
                        "outputParameters": [
                          {
                            "name": "VerifiedLink",
                            "valueDescription": "Returning the Verified Link for project."
                          }
                        ]
                      },
                      "notForRepetition": false,
                      "forRepetitionOnly": false
                    },
                    {
                      "id": "292e8054-642e-4233-8d8a-cefd2d6fe67d",
                      "name": "SetLetterOfApproval",
                      "description": "Set the letter of approval for the project.",
                      "request": {
                        "controlMessageName": "SetLetterOfApprovalRequest",
                        "description": "The request",
                        "inputParameters": [
                          {
                            "name": "VerifiedLink",
                            "valueDescription": "The Verified Link type to add to the project."
                          }
                        ]
                      },
                      "response": {
                        "controlMessageName": "SetLetterOfApprovalResponse",
                        "description": "The response",
                        "outputParameters": [
                          {
                            "name": "Confirmation",
                            "valueDescription": "Returning a confirmation for the set request."
                          }
                        ]
                      },
                      "notForRepetition": false,
                      "forRepetitionOnly": false
                    }
                  ],
                  "influenceBindings": [],
                  "properties": [],
                  "repeated": false
                }
              ],
              "propertySets": [],
              "repeated": false
            }
          ],
          "repeated": false
        }
      ],
      "repeated": false
    }
  ],
  "childTokens": []
}