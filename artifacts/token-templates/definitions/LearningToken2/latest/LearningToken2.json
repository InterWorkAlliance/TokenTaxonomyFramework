{
  "artifact": {
    "artifactSymbol": {
      "id": "3fda0f70-1419-47ac-993f-17b9c27f8747",
      "type": "TEMPLATE_DEFINITION",
      "visual": "[&tau;<sub>N</sub>{<i>~d,m,a,r,b,t,q</i>}]",
      "tooling": "[tF{~d,m,a,r,b,t,q}+phDR+phGL]",
      "version": "1.0",
      "templateValidated": true
    },
    "name": "LearningToken2",
    "aliases": [
      "Helping Token"
    ],
    "artifactDefinition": {
      "businessDescription": "This is a Fixed Supply Fungible where the total supply is set at creation using the Quantity property of the Base token.  It is not fractional by setting the Decimals property has initialize for that. A token instance can be burned.",
      "businessExample": "Typically used to represent an Initial Token To all the learner for creating an reward based helping community.",
      "analogies": [
        {
          "name": "Helping Token",
          "description": "Helping Token that will be distributed to all the learner within a course. This will create a reward based helping community among learner."
        }
      ],
      "comments": ""
    },
    "dependencies": [],
    "incompatibleWithSymbols": [],
    "influencedBySymbols": [],
    "controlUri": "",
    "artifactFiles": [
      {
        "content": "CONTROL",
        "fileName": "LearningToken2.proto",
        "fileData": ""
      },
      {
        "content": "UML",
        "fileName": "LearningToken2.md",
        "fileData": ""
      }
    ],
    "maps": {
      "codeReferences": [],
      "implementationReferences": [],
      "resources": []
    },
    "contributors": []
  },
  "formulaReference": {
    "id": "4270a3f0-6f27-11ee-9c8f-e9be558858dd",
    "type": "TEMPLATE_FORMULA",
    "referenceNotes": "LearningToken2"
  },
  "tokenBase": {
    "reference": {
      "id": "3c05a856-c901-4c30-917e-df9feed1c8de",
      "type": "BASE",
      "referenceNotes": "",
      "values": {
        "controlUri": "",
        "artifactFiles": [],
        "maps": {
          "codeReferences": [],
          "implementationReferences": [],
          "resources": []
        }
      }
    },
    "valueType": "INTRINSIC",
    "supply": "FIXED",
    "name": "",
    "symbol": "",
    "owner": "",
    "quantity": "0",
    "decimals": 0,
    "tokenProperties": {},
    "constructorName": "Constructor"
  },
  "behaviors": [
    {
      "reference": {
        "id": "d5807a8e-879b-4885-95fa-f09ba2a22172",
        "type": "BEHAVIOR",
        "referenceNotes": "Indivisible",
        "values": {
          "controlUri": "",
          "artifactFiles": [],
          "maps": {
            "codeReferences": [],
            "implementationReferences": [],
            "resources": []
          }
        }
      },
      "isExternal": true,
      "constructorType": "",
      "appliesTo": [],
      "invocations": [],
      "influenceBindings": [],
      "properties": [
        {
          "name": "Decimals",
          "valueDescription": "Set to Zero, not allowing any division, usually this is applied to the base token.",
          "templateValue": "0",
          "propertyInvocations": [
            {
              "id": "2ca7fbb2-ce98-4dda-a6ae-e4ac2527bb33",
              "name": "GetDecimals",
              "description": "Should return 0",
              "request": {
                "controlMessageName": "GetDecimalsRequest",
                "description": "",
                "inputParameters": []
              },
              "response": {
                "controlMessageName": "GetDecimalsResponse",
                "description": "Return 0",
                "outputParameters": [
                  {
                    "name": "Decimals",
                    "valueDescription": "0"
                  }
                ]
              },
              "notForRepetition": false,
              "forRepetitionOnly": false
            }
          ],
          "influenceBindings": [],
          "properties": [],
          "repeated": false
        }
      ]
    },
    {
      "reference": {
        "id": "f9224e90-3cab-45bf-b5dc-0175121e2ead",
        "type": "BEHAVIOR",
        "referenceNotes": "Mintable",
        "values": {
          "controlUri": "",
          "artifactFiles": [],
          "maps": {
            "codeReferences": [
              {
                "mappingType": "SOURCE_CODE",
                "name": "Open Zeppelin",
                "platform": "ETHEREUM_SOLIDITY",
                "referencePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20Mintable.sol"
              }
            ],
            "implementationReferences": [
              {
                "mappingType": "IMPLEMENTATION",
                "name": "Implementation 1",
                "platform": "CHAINCODE_GO",
                "referencePath": ""
              }
            ],
            "resources": [
              {
                "mappingType": "RESOURCE",
                "name": "Regulation Reference 1",
                "description": "",
                "resourcePath": ""
              }
            ]
          }
        }
      },
      "isExternal": true,
      "constructorType": "",
      "appliesTo": [],
      "invocations": [
        {
          "id": "3ddf15db-c919-4f72-a57b-d089931bc901",
          "name": "Mint",
          "description": "A request to create new token instances in the class by the owner or a party or account in a role that is granted this permission. Minted tokens using this invocation will be owned by the owner or token pool account. Requires a Quantity field in the request.",
          "request": {
            "controlMessageName": "MintRequest",
            "description": "The request",
            "inputParameters": [
              {
                "name": "Quantity",
                "valueDescription": "Number of new tokens to create."
              }
            ]
          },
          "response": {
            "controlMessageName": "MintResponse",
            "description": "The response",
            "outputParameters": [
              {
                "name": "Confirmation",
                "valueDescription": "A confirmation receipt or error may be returned to the invoker based on the outcome of the mint request."
              }
            ]
          },
          "notForRepetition": false,
          "forRepetitionOnly": false
        },
        {
          "id": "70499b23-a1dd-4c87-90d6-6e45400f28b5",
          "name": "MintTo",
          "description": "A request to create new token instances in the class by the owner or a party or account in a role that is granted this permission to another party or account.  Requires a To and Quantity fields in the request.",
          "request": {
            "controlMessageName": "MintToRequest",
            "description": "The request",
            "inputParameters": [
              {
                "name": "ToAccount",
                "valueDescription": "Account Id to mint the tokens to."
              },
              {
                "name": "Quantity",
                "valueDescription": "Number of new tokens to create."
              }
            ]
          },
          "response": {
            "controlMessageName": "MintToResponse",
            "description": "The response",
            "outputParameters": [
              {
                "name": "Confirmation",
                "valueDescription": "A confirmation receipt or error may be returned to the invoker based on the outcome of the MintTo request."
              }
            ]
          },
          "notForRepetition": false,
          "forRepetitionOnly": false
        }
      ],
      "influenceBindings": [],
      "properties": []
    },
    {
      "reference": {
        "id": "189b1589-a93a-4aa6-8d9d-0d9237ab5b42",
        "type": "BEHAVIOR",
        "referenceNotes": "Attestable",
        "values": {
          "controlUri": "",
          "artifactFiles": [],
          "maps": {
            "codeReferences": [],
            "implementationReferences": [],
            "resources": []
          }
        }
      },
      "isExternal": true,
      "constructorType": "",
      "appliesTo": [],
      "invocations": [
        {
          "id": "f404f43f-c922-475d-9a0c-b4a0bdca6029",
          "name": "Attest",
          "description": "A request to validate a rule or attestation.",
          "request": {
            "controlMessageName": "AttestRequest",
            "description": "The request to Attest an attestation.",
            "inputParameters": [
              {
                "name": "Attestation",
                "valueDescription": "Value of the attestation to validate"
              }
            ]
          },
          "response": {
            "controlMessageName": "AttestResponse",
            "description": "The response from the AttestRequest.",
            "outputParameters": [
              {
                "name": "Confirmation",
                "valueDescription": "A true or false result"
              }
            ]
          },
          "notForRepetition": false,
          "forRepetitionOnly": false
        },
        {
          "id": "c573dc98-d669-4e24-a06d-70a7c1d29078",
          "name": "AttestByAccount",
          "description": "A request to validate a rule or attestation.",
          "request": {
            "controlMessageName": "AttestByAccountRequest",
            "description": "The request to Attest by an account id.",
            "inputParameters": [
              {
                "name": "AccountId",
                "valueDescription": "The Id of the account to validate."
              }
            ]
          },
          "response": {
            "controlMessageName": "AttestByAccountResponse",
            "description": "The response from the AttestByAccountRequest, if true can include a Attestation for the caller to use in subsequent attestation checks.",
            "outputParameters": [
              {
                "name": "Confirmation",
                "valueDescription": "A true or false result"
              },
              {
                "name": "Attestation",
                "valueDescription": "A cryptographic signature that can be validated with AttestRequest."
              }
            ]
          },
          "notForRepetition": false,
          "forRepetitionOnly": false
        }
      ],
      "influenceBindings": [],
      "properties": []
    },
    {
      "reference": {
        "id": "c32726da-9787-4dd8-8de3-d07d1733d0f6",
        "type": "BEHAVIOR",
        "referenceNotes": "Roles",
        "values": {
          "controlUri": "",
          "artifactFiles": [],
          "maps": {
            "codeReferences": [
              {
                "mappingType": "SOURCE_CODE",
                "name": "Open Zeppelin - Roles",
                "platform": "ETHEREUM_SOLIDITY",
                "referencePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Roles.sol"
              }
            ],
            "implementationReferences": [],
            "resources": []
          }
        }
      },
      "isExternal": true,
      "constructorType": "",
      "appliesTo": [],
      "invocations": [
        {
          "id": "00a665e3-1dda-441e-8262-5750435c153c",
          "name": "RoleCheck",
          "description": "Internal invocation when the applied behavior is called to check if the requestor is a member of the role.",
          "request": {
            "controlMessageName": "IsInRole",
            "description": "The request",
            "inputParameters": [
              {
                "name": "AccountId",
                "valueDescription": "AccountId of the requestor."
              }
            ]
          },
          "response": {
            "controlMessageName": "True/False",
            "description": "The response",
            "outputParameters": [
              {
                "name": "IsInRole",
                "valueDescription": "True/False"
              }
            ]
          },
          "notForRepetition": false,
          "forRepetitionOnly": false
        }
      ],
      "influenceBindings": [],
      "properties": [
        {
          "name": "Role",
          "valueDescription": "A group or list an account can be a member or be in.",
          "templateValue": "",
          "propertyInvocations": [
            {
              "id": "",
              "name": "GetRoleMembers",
              "description": "Request the the list of member accounts in the role.",
              "request": {
                "controlMessageName": "GetRoleMembersRequest",
                "description": "The request",
                "inputParameters": []
              },
              "response": {
                "controlMessageName": "GetRoleMembersResponse",
                "description": "The response",
                "outputParameters": [
                  {
                    "name": "Members",
                    "valueDescription": "Returning the list of accounts in the role."
                  }
                ]
              },
              "notForRepetition": false,
              "forRepetitionOnly": false
            },
            {
              "id": "600357f8-0499-47f8-87a5-eedf4ad034af",
              "name": "AddRoleMember",
              "description": "Add a member to the group or role property.",
              "request": {
                "controlMessageName": "AddRoleMemberRequest",
                "description": "The request",
                "inputParameters": [
                  {
                    "name": "RoleName",
                    "valueDescription": "Name of the role you are adding a member to. Optional parameter if there is only one role."
                  },
                  {
                    "name": "AccountAddress",
                    "valueDescription": "Address, name or identifier of the account to be added to the role."
                  }
                ]
              },
              "response": {
                "controlMessageName": "AddRoleMemberResponse",
                "description": "The response",
                "outputParameters": [
                  {
                    "name": "Added",
                    "valueDescription": "True or False."
                  }
                ]
              },
              "notForRepetition": false,
              "forRepetitionOnly": false
            },
            {
              "id": "97e160bb-6c60-4f1d-923b-813b07b89638",
              "name": "RemoveRoleMember",
              "description": "Remove a member to the group or role property.",
              "request": {
                "controlMessageName": "RemoveRoleMemberRequest",
                "description": "The request",
                "inputParameters": [
                  {
                    "name": "RoleName",
                    "valueDescription": "Name of the role you are adding a member to. Optional parameter if there is only one role."
                  },
                  {
                    "name": "AccountAddress",
                    "valueDescription": "Address, name or identifier of the account to be removed from the role."
                  }
                ]
              },
              "response": {
                "controlMessageName": "RemoveRoleMemberResponse",
                "description": "The response",
                "outputParameters": [
                  {
                    "name": "Added",
                    "valueDescription": "True or False."
                  }
                ]
              },
              "notForRepetition": false,
              "forRepetitionOnly": false
            },
            {
              "id": "e42b1b16-074a-4d7d-b9f9-f69a2397a21b",
              "name": "IsInRole",
              "description": "Check to see if an account is in the role.",
              "request": {
                "controlMessageName": "IsInRoleRequest",
                "description": "The request may be internal only and not exposed externally.",
                "inputParameters": [
                  {
                    "name": "RoleName",
                    "valueDescription": "Name of the role you are checking membership of. Optional parameter if there is only one role."
                  },
                  {
                    "name": "AccountAddress",
                    "valueDescription": "Address, name or identifier of the account to be checked."
                  }
                ]
              },
              "response": {
                "controlMessageName": "IsInRoleRequestResponse",
                "description": "The response",
                "outputParameters": [
                  {
                    "name": "InRole",
                    "valueDescription": "True or False."
                  }
                ]
              },
              "notForRepetition": false,
              "forRepetitionOnly": false
            }
          ],
          "influenceBindings": [],
          "properties": [],
          "repeated": false
        }
      ]
    },
    {
      "reference": {
        "id": "803297a1-c0f9-4898-9d44-29c9d41cca97",
        "type": "BEHAVIOR",
        "referenceNotes": "Burnable",
        "values": {
          "controlUri": "",
          "artifactFiles": [],
          "maps": {
            "codeReferences": [
              {
                "mappingType": "SOURCE_CODE",
                "name": "Open Zeppelin",
                "platform": "ETHEREUM_SOLIDITY",
                "referencePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20Burnable.sol"
              }
            ],
            "implementationReferences": [],
            "resources": []
          }
        }
      },
      "isExternal": true,
      "constructorType": "",
      "appliesTo": [],
      "invocations": [
        {
          "id": "f063dcaa-49f9-4c49-bf0f-2766301e1033",
          "name": "Burn",
          "description": "A request to burn a token instance(s) in the class by the owner of the token instance(s).  Optional Quantity field in the request.",
          "request": {
            "controlMessageName": "BurnRequest",
            "description": "The request to Burn or Retire tokens.",
            "inputParameters": [
              {
                "name": "Quantity",
                "valueDescription": "The number of tokens to burn, might not apply to the implementation."
              }
            ]
          },
          "response": {
            "controlMessageName": "BurnResponse",
            "description": "The response from the request to burn.",
            "outputParameters": [
              {
                "name": "Confirmation",
                "valueDescription": "A confirmation receipt or error may be returned to the invoker based on the outcome of the burn request"
              }
            ]
          },
          "notForRepetition": false,
          "forRepetitionOnly": false
        },
        {
          "id": "49b53152-3360-426f-9e0a-24a0b4e7c881",
          "name": "BurnFrom",
          "description": "Requires Delegable. A request to burn token instance(s) in the class by a party or account that has allowance to do so.  Requires a From and Quantity fields in the request.",
          "request": {
            "controlMessageName": "BurnFromRequest",
            "description": "The request to Burn or Retire tokens.",
            "inputParameters": [
              {
                "name": "From",
                "valueDescription": "AccountId from which tokens are burnt"
              },
              {
                "name": "Quantity",
                "valueDescription": "The number of tokens to burn, might not apply to the implementation."
              }
            ]
          },
          "response": {
            "controlMessageName": "BurnFromResponse",
            "description": "The response from the request to burn.",
            "outputParameters": [
              {
                "name": "Confirmation",
                "valueDescription": "A confirmation receipt or error may be returned to the invoker based on the outcome of the burn from request"
              }
            ]
          },
          "notForRepetition": false,
          "forRepetitionOnly": false
        }
      ],
      "influenceBindings": [],
      "properties": []
    },
    {
      "reference": {
        "id": "af119e58-6d84-4ca6-9656-75e8d312f038",
        "type": "BEHAVIOR",
        "referenceNotes": "Transferable",
        "values": {
          "controlUri": "",
          "artifactFiles": [],
          "maps": {
            "codeReferences": [],
            "implementationReferences": [],
            "resources": []
          }
        }
      },
      "isExternal": true,
      "constructorType": "",
      "appliesTo": [],
      "invocations": [
        {
          "id": "5d4b8f10-7857-4a2f-9b8c-d61e367a6bcc",
          "name": "Transfer",
          "description": ">A transfer request will invoke a transfer from the owner of the token to the party or account provided in the To field of the request. For fungible or dividable non-fungible tokens, this request may also include value in the Amount field of the request to transfer more than one token of the class in a single request.",
          "request": {
            "controlMessageName": "TransferRequest",
            "description": "The request",
            "inputParameters": [
              {
                "name": "To",
                "valueDescription": "AccountId to transfer ownership to."
              },
              {
                "name": "Quantity",
                "valueDescription": "Number of tokens to transfer."
              }
            ]
          },
          "response": {
            "controlMessageName": "TransferResponse",
            "description": "The response",
            "outputParameters": [
              {
                "name": "Confirmation",
                "valueDescription": "A confirmation receipt or error may be returned to the owner based on the outcome of the transfer request."
              }
            ]
          },
          "notForRepetition": false,
          "forRepetitionOnly": false
        },
        {
          "id": "516b4e2f-4a14-4c4f-a6f2-1419d4af35c6",
          "name": "TransferFrom",
          "description": ">A transfer request will invoke a transfer from the owner of the token to the party or account provided in the To field of the request. For fungible or dividable non-fungible tokens, this request may also include value in the Amount field of the request to transfer more than one token of the class in a single request.",
          "request": {
            "controlMessageName": "TransferFromRequest",
            "description": "The request",
            "inputParameters": [
              {
                "name": "From",
                "valueDescription": "AccountId to transfer ownership from."
              },
              {
                "name": "To",
                "valueDescription": "AccountId to transfer ownership to."
              },
              {
                "name": "Quantity",
                "valueDescription": "Number of tokens to transfer."
              }
            ]
          },
          "response": {
            "controlMessageName": "TransferFromResponse",
            "description": "The response",
            "outputParameters": [
              {
                "name": "Confirmation",
                "valueDescription": "A confirmation receipt or error may be returned to the owner based on the outcome of the transfer from request."
              }
            ]
          },
          "notForRepetition": false,
          "forRepetitionOnly": false
        }
      ],
      "influenceBindings": [],
      "properties": []
    },
    {
      "reference": {
        "id": "51a62eba-0e84-433a-a3f1-9b3e7f72d928",
        "type": "BEHAVIOR",
        "referenceNotes": "Redeemable",
        "values": {
          "controlUri": "",
          "artifactFiles": [],
          "maps": {
            "codeReferences": [
              {
                "mappingType": "SOURCE_CODE",
                "name": "FabToken",
                "platform": "CHAINCODE_GO",
                "referencePath": "https://github.com/hyperledger/fabric/blob/v2.0.0-alpha/token/cmd/redeem.go"
              }
            ],
            "implementationReferences": [],
            "resources": []
          }
        }
      },
      "isExternal": true,
      "constructorType": "",
      "appliesTo": [],
      "invocations": [
        {
          "id": "c6a0ef93-0d7d-4c68-a3b4-8f5d0bbadcbe",
          "name": "Redeem",
          "description": "A redeem request will redeem a quantity transfer from tokens provided to an account that has no owner, removing them permanently from circulation, as long as tokens being redeemed need to belong to the transaction initiator and are unspent. Any remaining quantity will be returned as a new unspent quantity to the invoker/owner.",
          "request": {
            "controlMessageName": "RedeemRequest",
            "description": "The request includes an asset quantity to redeem and a list of tokens that have quantities that equal or exceed the quantity to redeem. Any remaining balance will be deposited into a new token with the invoker as the owner.",
            "inputParameters": [
              {
                "name": "TokenIds",
                "valueDescription": "List of Token Identifiers submitted to draw the quantity to redeem from. This data type is defined at implementation."
              },
              {
                "name": "Quantity",
                "valueDescription": "Number of tokens to transfer."
              },
              {
                "name": "Recipient",
                "valueDescription": "Always null, empty or to a know account that has no owner."
              }
            ]
          },
          "response": {
            "controlMessageName": "RedeemResponse",
            "description": "The response",
            "outputParameters": [
              {
                "name": "Confirmation",
                "valueDescription": "A confirmation receipt or error may be returned to the invoker based on the outcome of the fabricate request."
              }
            ]
          },
          "notForRepetition": false,
          "forRepetitionOnly": false
        }
      ],
      "influenceBindings": [],
      "properties": []
    }
  ],
  "behaviorGroups": [],
  "propertySets": [
    {
      "reference": {
        "id": "d7607f63-5e29-424f-a991-3f05c8f0daf7",
        "type": "PROPERTY_SET",
        "referenceNotes": "Date Range",
        "values": {
          "controlUri": "",
          "artifactFiles": [],
          "maps": {
            "codeReferences": [],
            "implementationReferences": [],
            "resources": []
          }
        }
      },
      "representationType": "COMMON",
      "properties": [
        {
          "name": "DateRange",
          "valueDescription": "Contains the date range.",
          "templateValue": "",
          "propertyInvocations": [
            {
              "id": "e3b45dcc-f767-4c9d-a081-9b0f91eb728c",
              "name": "GetDateRange",
              "description": "Request the value of the verified link property",
              "request": {
                "controlMessageName": "GetDateRangeRequest",
                "description": "The request",
                "inputParameters": []
              },
              "response": {
                "controlMessageName": "GetDateRangeResponse",
                "description": "The response",
                "outputParameters": [
                  {
                    "name": "StartDate",
                    "valueDescription": "Returning the simple date value."
                  },
                  {
                    "name": "StartTimeStamp",
                    "valueDescription": "Returning the granular start timestamp."
                  },
                  {
                    "name": "EndDate",
                    "valueDescription": "Returning the simple date value."
                  },
                  {
                    "name": "EndTimeStamp",
                    "valueDescription": "Returning the granular start timestamp."
                  }
                ]
              },
              "notForRepetition": false,
              "forRepetitionOnly": false
            },
            {
              "id": "269dfe9a-bf3e-4416-af54-4a49a0e408d0",
              "name": "SetDateRange",
              "description": "Set the Value of the Date Range Property, note if Roles should be applied to the Setter.",
              "request": {
                "controlMessageName": "SetDateRangeRequest",
                "description": "The request",
                "inputParameters": [
                  {
                    "name": "StartDate",
                    "valueDescription": "Set the simple date value."
                  },
                  {
                    "name": "StartTimeStamp",
                    "valueDescription": "Set the granular start timestamp."
                  },
                  {
                    "name": "EndDate",
                    "valueDescription": "Set the simple date value."
                  },
                  {
                    "name": "EndTimeStamp",
                    "valueDescription": "Set the granular start timestamp."
                  }
                ]
              },
              "response": {
                "controlMessageName": "SetDateRangeResponse",
                "description": "The response",
                "outputParameters": [
                  {
                    "name": "Confirmation",
                    "valueDescription": "Returning the value of the set request."
                  }
                ]
              },
              "notForRepetition": false,
              "forRepetitionOnly": false
            }
          ],
          "influenceBindings": [],
          "properties": [
            {
              "name": "DateRange",
              "valueDescription": "Contains the values for the Date Range.",
              "templateValue": "",
              "propertyInvocations": [],
              "influenceBindings": [],
              "properties": [
                {
                  "name": "StartDate",
                  "valueDescription": "A simple date format.",
                  "templateValue": "",
                  "propertyInvocations": [],
                  "influenceBindings": [],
                  "properties": [],
                  "repeated": false
                },
                {
                  "name": "StartTimeStamp",
                  "valueDescription": "A granular timestamp.",
                  "templateValue": "",
                  "propertyInvocations": [],
                  "influenceBindings": [],
                  "properties": [],
                  "repeated": false
                },
                {
                  "name": "EndDate",
                  "valueDescription": "A simple date format.",
                  "templateValue": "",
                  "propertyInvocations": [],
                  "influenceBindings": [],
                  "properties": [],
                  "repeated": false
                },
                {
                  "name": "EndTimeStamp",
                  "valueDescription": "A granular timestamp.",
                  "templateValue": "",
                  "propertyInvocations": [],
                  "influenceBindings": [],
                  "properties": [],
                  "repeated": false
                }
              ],
              "repeated": false
            }
          ],
          "repeated": false
        }
      ],
      "propertySets": [],
      "repeated": false
    },
    {
      "reference": {
        "id": "7a768ba8-b87f-4ffe-aed6-ce0121617baf",
        "type": "PROPERTY_SET",
        "referenceNotes": "Geographic Location",
        "values": {
          "controlUri": "",
          "artifactFiles": [],
          "maps": {
            "codeReferences": [],
            "implementationReferences": [],
            "resources": []
          }
        }
      },
      "representationType": "COMMON",
      "properties": [
        {
          "name": "GNSS",
          "valueDescription": "Contains a simple GNSS location, for an area this may be a center point or just one of the area points.",
          "templateValue": "",
          "propertyInvocations": [
            {
              "id": "",
              "name": "GetGNSS",
              "description": "Request the GNSS point location.",
              "request": {
                "controlMessageName": "GetGNSSRequest",
                "description": "The request",
                "inputParameters": []
              },
              "response": {
                "controlMessageName": "GetGNSSResponse",
                "description": "The response",
                "outputParameters": [
                  {
                    "name": "Longitude",
                    "valueDescription": "Returning the longitude."
                  },
                  {
                    "name": "Latitude",
                    "valueDescription": "Returning the latitude."
                  }
                ]
              },
              "notForRepetition": false,
              "forRepetitionOnly": false
            },
            {
              "id": "",
              "name": "SetGNSS",
              "description": "Add a geographic area entry into the list of the Property, note if Roles should be applied to the Setter. This property should validate that the category submitted is valid for the scope.",
              "request": {
                "controlMessageName": "SetGNSSRequest",
                "description": "The request",
                "inputParameters": [
                  {
                    "name": "Longitude",
                    "valueDescription": "Returning the longitude."
                  },
                  {
                    "name": "Latitude",
                    "valueDescription": "Returning the latitude."
                  }
                ]
              },
              "response": {
                "controlMessageName": "SetGNSSResponse",
                "description": "The response",
                "outputParameters": [
                  {
                    "name": "Confirmation",
                    "valueDescription": "Returning a confirmation for the set request."
                  }
                ]
              },
              "notForRepetition": false,
              "forRepetitionOnly": false
            }
          ],
          "influenceBindings": [],
          "properties": [
            {
              "name": "GNSS",
              "valueDescription": "Contains a single GNSS coordinate for simple location.",
              "templateValue": "",
              "propertyInvocations": [],
              "influenceBindings": [],
              "properties": [
                {
                  "name": "Longitude",
                  "valueDescription": "A string of text or possibly numeric value.",
                  "templateValue": "",
                  "propertyInvocations": [],
                  "influenceBindings": [],
                  "properties": [],
                  "repeated": false
                },
                {
                  "name": "Latitude",
                  "valueDescription": "A string of text or possibly numeric value.",
                  "templateValue": "",
                  "propertyInvocations": [],
                  "influenceBindings": [],
                  "properties": [],
                  "repeated": false
                },
                {
                  "name": "Timing",
                  "valueDescription": "A string of text or possibly numeric value.",
                  "templateValue": "",
                  "propertyInvocations": [],
                  "influenceBindings": [],
                  "properties": [],
                  "repeated": false
                }
              ],
              "repeated": false
            }
          ],
          "repeated": false
        },
        {
          "name": "GeographicAreas",
          "valueDescription": "Contains the reported emission scope and it's category from pick list, see ggbsc.proto.",
          "templateValue": "",
          "propertyInvocations": [
            {
              "id": "",
              "name": "GetGeographicAreas",
              "description": "Request the a Geographic Area, usually stored as a GeoJSON string for an area.",
              "request": {
                "controlMessageName": "GetGeographicAreasRequest",
                "description": "The request",
                "inputParameters": []
              },
              "response": {
                "controlMessageName": "GetGeographicAreasResponse",
                "description": "The response",
                "outputParameters": [
                  {
                    "name": "GeographicAreas",
                    "valueDescription": "Returns the GeoJSON of Geographic Areas."
                  }
                ]
              },
              "notForRepetition": false,
              "forRepetitionOnly": false
            },
            {
              "id": "",
              "name": "SetGeographicArea",
              "description": "Set the geographic area usually stored as GeoJSON, note if Roles should be applied to the Setter.",
              "request": {
                "controlMessageName": "SetGeographicAreaRequest",
                "description": "The request",
                "inputParameters": [
                  {
                    "name": "GeographicArea",
                    "valueDescription": "A GeographicArea as GeoJSON."
                  }
                ]
              },
              "response": {
                "controlMessageName": "SetGeographicAreaResponse",
                "description": "The response",
                "outputParameters": [
                  {
                    "name": "Confirmation",
                    "valueDescription": "Returning a confirmation for the add request."
                  }
                ]
              },
              "notForRepetition": false,
              "forRepetitionOnly": false
            }
          ],
          "influenceBindings": [],
          "properties": [
            {
              "name": "GeographicLocations",
              "valueDescription": "Contains the Geographic Areas as GeoJSON.",
              "templateValue": "",
              "propertyInvocations": [],
              "influenceBindings": [],
              "properties": [
                {
                  "name": "GeographicArea",
                  "valueDescription": "A complex type described in the as GeoJSON.",
                  "templateValue": "",
                  "propertyInvocations": [],
                  "influenceBindings": [],
                  "properties": [],
                  "repeated": false
                }
              ],
              "repeated": false
            }
          ],
          "repeated": false
        }
      ],
      "propertySets": [],
      "repeated": false
    }
  ],
  "childTokens": []
}