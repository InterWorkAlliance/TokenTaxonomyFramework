syntax = "proto3";

package iwa.ttf.token.sustainbility.common;

import "google/protobuf/timestamp.proto";
option csharp_namespace = "IWA.TTF.Token.Sustainability.Common";
option java_package = "org.iwa.ttf.token.sustainability.common";
option java_multiple_files = true;


enum TargetedBenefitType {
    GHG = 0;
    WATER = 1;
    OTHER = 50;
}

enum ProjectScale {
    MICRO = 0;
    SMALL = 1;
    MEDIUM = 2;
    LARGE = 3;
}


enum QualityStandard{
    GS_VER =  0; //Voluntary: Gold Standard Verified Emissions Reduction
    VCS =  1; //Voluntary: Cerified Carbon Standard generates VCUs
    VOS =  2; //Voluntary: Voluntary Offset Standard
    CCB =  3; //Voluntary: Climate
    GREEN_E =  4; //Voluntary: US renewable energy
    CDM =  5; //Compliance: Clean Development Mechanism generates CERs
    JI =  6; //Compliance: Joint Implementation - Kyoto binding targets generation of ERUs
    EUA =  7; //Compliance: European Union Allowances
    PENDING =  8; //Other
}

enum ClassificationCategory
{
    AVOIDANCE = 0;
    REDUCTION = 1;
    REMOVAL = 2;
}

enum ClassificationMethod
{
    MIXED_NATURE_TECHNOLOGY = 0;
    NATURE = 1;
    TECHNOLOGY = 2;
}

enum StorageType
{
    MATERIALS = 0;
    BIOLOGICAL = 1;
    GEOLOGICAL = 2;
}


enum HashAlgorithmType
{
    SHA256 = 0;
    SHA3 = 1;
}

enum Region
{
    EARTH = 0;
    CENTRAL_AMERICA = 1;
    CENTRAL_ASIA = 2;
    EAST_ASIA =3;
    EUROPE = 4;
    INTERNATIONAL = 5;
    MIDDLE_EAST = 6;
    NORTH_AFRICA = 7;
    NORTH_AMERICA = 8;
    OCEANIA = 9;
    SOUTH_AMERICA = 10;
    SOUTH_ASIA = 11;
    SOUTH_EAST_ASIA = 12;
    SUB_SAHARAN_AFRICA = 13;
}

enum DegradationType{
    LINEAR = 0;
    EXPONENTIAL = 1;
}

//Estimated risk of reversal or release of carbon via natural and social causes prematurely.
enum ReversalRisk{
    ZERO = 0; //GHG reservoirs are subject to zero risk if the form of carbon storage is such that stored CO2e cannot conceivably be released into the atmosphere. This also includes activity types with no storage, and thus no risk of reversal, e.g., Enhanced weathering of minerals, mineralisation, renewable energy, other activities leading to lower demand for fossil fuel.
    LOW = 1; //GHG reservoirs might be subject to low risk of reversal if the characteristics of storage reservoirs (e.g., the geological formation in which carbon is to be stored,in the case of carbon capture and storage) and monitoring requirements virtually eliminate risk, e.g. Carbon capture and storage in geological formations, direct air capture and storage.
    MATERIAL = 2; //GHG reservoirs might be subject to significant reversal risks if: risks of reversal are exogenous and/or unavoidable (e.g., extreme weather events, invasive pest outbreaks, and wildfires); the GHG reservoir is subject to natural disturbance and natural fluxes in carbon inventories; reversal events may or can be expected to occur over a specified time horizon (100 years); a mitigation activity proponent could have economic interests in intentionally causing a reversal (for example cutting down a forest for timber or changing land use to agriculture), e.g. Improved forest management, afforestation/reforestation, enhanced soil organic carbon sequestration, Avoided deforestation, sequestration via harvested wood products (for example buildings)
}

enum DurabilityInsuranceType{
    BUFFER_POOL = 0; //an ecological project or insurance product can set aside credits into a pool for risk mitigation. If needed issued credits can be revoked and replaced by credits from the pool.
    REFUND = 1; //purchase price of the credit is refunded to the buyer and the credit is revoked.
}

enum InsuranceProvider{
    ECOLOGICAL_PROJECT = 0;
    INSURANCE_PRODUCT = 1;
    UNDEFINED = 2;
}

message Degradable{
    int32 percentage = 1; //0 = no degredation possible, 100 = all sequestered should be expected to be released
    int32 factor = 2; //25 = .25 per year if linear or exponential starts at 25% of durability years.
    DegradationType degradation_type = 3; //does the sequestration degrade over time?
}

message ReversalMitigation{
    ReversalRisk reversal_risk = 1;
    DurabilityInsuranceType insurance_type = 2;
    InsuranceProvider InsuranceProvider = 3;
    common.VerifiedLink insurance_policy_link = 4; //optional link to the insurance policy/product
}

message Durability
{
    StorageType storage_type = 1;
    int32 years = 2; //The term in years of how long the CO2 will be removed from the atmosphere, compared with the risk of CO2 reversion to the atmosphere before that term elapses.
    Degradable degradable = 3;
    ReversalMitigation reversal_mitigation = 4; //for removals, the risk of reversal needs to be defined and a mitigation strategy should be indentified
}

message VerifiedLink{
    string id = 1;
    string uri = 2;
    string description = 3;
    string hash_proof = 4;
    HashAlgorithmType hash_algorithm = 5;
}

//records the CRU token that is being replaced after it is revoked. I.e. forest fire or accounting adjustment requires that a credit issued needs to be revoked and replaced.
message Adjustment{
    string id = 1;
    string replaces_id = 2;
    google.protobuf.Timestamp replacement_date = 3;
    string replacement_notes = 4;
}

//DATE RANGE

message DatePoint{
    string start_date = 1; //can be a simple date format DD/MM/YYYY or MM/DD/YYYY
    google.protobuf.Timestamp time_stamp = 2; //granular timestamp for precice range measurement
}

message DateRange{
    DatePoint start_date = 1; 
    DatePoint end_date = 2; 
}

//CO-BENEFITS

//Not complete
enum EcologicalBenefitCategory {
    NO_CATEGORY = 0;
    NO_POVERTY = 1;
    ZERO_HUNGER = 2;
    GOOD_HEALTH_AND_WELL_BEING = 3;
    QUALITY_EDUCATION = 4;
    GENDER_EQUALITY = 5;
    CLEAN_WATER_AND_SANITATION = 6;
    AFFORDABLE_AND_CLEAN_ENERGY = 7;
    DECENT_WORK_AND_ECONOMIC_GROWTH = 8;
    INDUSTRY_INNOVATION_AND_INFRASTRUCTURE = 9;
    REDUCED_INEQUALITIES = 10;
    SUSTAINABLE_CITIES_AND_COMMUNITIES = 11;
    RESPONSIBLE_CONSUMPTION_AND_PRODUCTION = 12;
    CLIMATE_ACTION = 13;
    LIFE_BELOW_WATER = 14;
    LIFE_ON_LAND = 15;
    PEACE_JUSTICE_AND_STRONG_INSTITUTIONS = 16;
    PARTNERSHIPS_FOR_THE_GOALS = 17;
}

enum EcologicalBenefitScope
{
    OTHER = 0;
    AGRICULTURE = 1;
    CARBON_CAPTURE_AND_STORAGE = 2;
    CHEMICAL_PROCESSES = 3;
    FORESTRY_AND_LAND_USE = 4;
    HOUSEHOLD_AND_COMMUNITY = 5;
    INDUSTRIAL_MANUFACTURING = 6;
    RENEWABLE_ENERGY = 7;
    TRANSPORTATION = 8;
    WASTE_MANAGEMENT = 9;
}


message ClimateLabel
{
    string id = 1;
    string name = 2;
    string description = 3;
}


message CoBenefit {
    BenefitCategory co_benefit = 1; //high-level categories
    string description = 2; //description of the co-benefit that is not captured via the category
    int32 rating_score = 3;  //placeholder for some kind of rating or scoring of the relative co-benefit
}

//this is a Global Navigation Satellite System
message GNSS{
    string longitude = 1; 
    string latitude = 2; 
    string timing = 3;
}

message GeographicArea{
    string geo_json = 1;
}

message GeographicLocation{
    GNSS GNSS = 1;
    GeographicArea geographic_area = 2;
}

//Claims are comprised of checkpoints, which contain data from sources.
enum ClaimSourceType
{
    SENSOR_DEVICE = 0; //IoT, etc.
    USER_APPLICATION = 1; //An application that uses device sensors like GPS, date/time and user authentication as evidence of source claim data.
    REFERENCE = 2; //Satellite, Remote Sensing, Anayltical Models, etc.
}

enum AddressType
{
    POSTAL = 0;
    PHYSICAL = 1;
    LEGAL = 2;
}

message Address{
    AddressType address_type = 1;
    string street = 2;
    string city = 3;
    string state = 4;
    string zip = 5;
    string country = 6;
}

//COPIED FOR CODE GEN from Core Carbon Principles v1.0.0 Property set
//how the credit value was determined
enum GenerationType {
    GENERATED = 0;
    EX_ANTE = 1;
    EX_POST = 2;
}

message CoreCarbonPrinciples{
    string asset_id = 1; //typically the issuing verifier's master id or serial number that resides on their registry system. Could be empty or the same as the token's id if not needed.
    google.protobuf.TimeStamp issuance_date = 2; //the date the token was issued.
    string vintage = 3;  //refers to the year that the emissions reduction or ecological benefit took place //The principle that a project activity is additional if the resulting emission reductions are lower than what would have happened in the absence of the activity.
    GenerationType generation_type = 4; //typically generated or ex-ante
    QualityStandard verification_standard = 5; //the verification standard used to determine and issue a ecological benefit token. These can be a voluntary or compliance/regulatory standard.
    mitigationactivity.MitigationActivity mitigation_activity = 6; //the mitigation activity that is used to generate the ecological benefit token.
    durability.Durability durability = 7; //this is the recommendation to replace permanence for CCPs as it includes the risk profile and not simply a boolean.
    replacement.Replacement replacement = 8; //set if this Core Carbon Principles replaces a revoked or adjusted CCP.
    pariscompliance.PACompliance paris_agreement_compliance = 9; //set if using PA specific attributes like corresponding adjustment
    cobenefit.Cobenefits quantified_sdg_impacts = 10; //the quantified impacts of the token.
    cobenefit.Cobenefits adaptation_co_benefits = 11; //the adaptation co-benefits of the token consistent with the host countryâ€™s priorities, consistent with the provisions under Article 7.1 of the Paris Agreement.
}

message GetCoreCarbonPrinciplesRequest {
    tokens.MessageHeader header = 1;
}

message GetCoreCarbonPrinciplesResponse {
    tokens.MessageHeader header = 1;
    CoreCarbonPrinciples ecological_claim = 2;
}

message SetCoreCarbonPrinciplesRequest {
    tokens.MessageHeader header = 1;
    CoreCarbonPrinciples ecological_claim = 2;
}

message SetCoreCarbonPrinciplesResponse {
    tokens.MessageHeader header = 1;
    tokens.TransactionConfirmation transaction_confirmation = 2;
}
